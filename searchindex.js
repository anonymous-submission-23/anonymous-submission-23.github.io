Search.setIndex({"docnames": ["000/install", "000/tutorial", "010/graph_dataset", "010/link_dataset", "010/node_dataset", "030/common", "030/graph", "030/link", "030/node", "040/common", "040/graph", "040/link", "040/node", "050/bare", "050/cgnn", "050/ergnn", "050/ewc", "050/gem", "050/lwf", "050/mas", "050/twp", "060/metric", "060/performance", "070/linear", "index"], "filenames": ["000/install.rst", "000/tutorial.rst", "010/graph_dataset.rst", "010/link_dataset.rst", "010/node_dataset.rst", "030/common.rst", "030/graph.rst", "030/link.rst", "030/node.rst", "040/common.rst", "040/graph.rst", "040/link.rst", "040/node.rst", "050/bare.rst", "050/cgnn.rst", "050/ergnn.rst", "050/ewc.rst", "050/gem.rst", "050/lwf.rst", "050/mas.rst", "050/twp.rst", "060/metric.rst", "060/performance.rst", "070/linear.rst", "index.rst"], "titles": ["Install and Setup", "Tutorial", "Datasets for Graph-Level Problems", "Datasets for Link-Level Problems", "Datasets for Node-Level Problems", "Common framework", "Graph-level problems", "Link-level problems", "Node-level problems", "Common framework", "Graph-level problems", "Link-level problems", "Node-level problems", "Bare Model", "ContinualGNN", "ER-GNN", "EWC", "GEM", "LwF", "MAS", "TWP", "Metrics for CL", "Basic Performance Metrics", "AdaptiveLinear", "Welcome to BeGin Tutorials and Documentation!"], "terms": {"begin": [0, 1, 5, 9, 10, 11, 12, 14, 15, 16, 17, 19, 20, 21, 22, 23], "work": 0, "follow": [0, 1, 5, 9, 13, 21], "python": 0, "packag": 0, "pytorch": [0, 9], "1": [0, 2, 3, 4, 9, 10, 11, 12, 21], "8": [0, 1, 2, 4], "dgl": [0, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20], "0": [0, 1, 2, 9], "6": [0, 2, 3, 4], "ogb": 0, "3": [0, 2, 3, 4, 7, 8], "torch": [0, 1, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23], "scatter": 0, "2": [0, 2, 3, 4, 21], "spars": 0, "9": [0, 2, 3, 4], "For": [0, 1, 2, 3, 4, 9, 13, 14, 15, 16, 17, 18, 19, 20, 21], "run": [0, 1, 9, 10, 11, 12], "some": [0, 1, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], "exampl": [0, 1, 6, 7, 8], "you": [0, 1], "mai": [0, 1], "need": [0, 1, 5, 9, 13, 16, 17, 18, 19, 20], "addit": [0, 1, 9, 22, 23], "quadprog": 0, "cvxpy": 0, "qpth": 0, "can": [0, 1, 5, 6, 7, 8, 9, 22, 23], "command": 0, "py": 0, "i": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24], "framework": [1, 22, 23, 24], "contain": [1, 2, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], "core": 1, "compon": 1, "thi": [1, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22], "modul": [1, 5, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24], "provid": [1, 5, 21, 22, 23], "built": 1, "continu": [1, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 23], "learn": [1, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23], "scenario": [1, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22], "graph": [1, 5, 7, 8, 9, 11, 12, 14, 15, 24], "method": [1, 9, 15, 16, 17, 18, 19, 20], "which": [1, 2, 4, 14, 17, 20, 22, 23], "basic": [1, 5, 21, 24], "ground": [1, 6, 7, 8, 22], "truth": [1, 6, 7, 8, 22], "predict": [1, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 22, 24], "answer": [1, 22], "manag": [1, 9, 17, 23], "overal": [1, 9, 10, 11, 12], "train": [1, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23], "procedur": [1, 2, 22, 23], "user": [1, 3, 5, 9, 22], "defin": 1, "includ": [1, 5, 6, 7, 8, 9], "prepar": [1, 9], "dataload": [1, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20], "valid": [1, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 24], "so": 1, "onli": [1, 5, 6, 7, 8, 9, 10, 11, 12, 14], "have": [1, 9], "implement": [1, 5, 6, 7, 8, 9, 22], "novel": [1, 9], "part": [1, 5, 9], "In": [1, 9, 14, 21], "materi": 1, "we": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22], "briefli": 1, "describ": 1, "how": [1, 19], "those": 1, "us": [1, 2, 3, 4, 5, 6, 7, 8, 9, 14, 15, 17, 23], "order": [1, 5], "cl": [1, 13, 24], "dataset": [1, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 23], "multi": 1, "class": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23], "domain": [1, 2, 3, 4, 5, 6, 9], "timestamp": [1, 3], "increment": [1, 2, 3, 4, 5, 6, 7, 8, 9, 13], "proper": 1, "To": 1, "reduc": [1, 9, 10, 11, 12], "effort": 1, "variou": 1, "benchmark": [1, 5, 9], "relat": 1, "problem": [1, 5, 9, 24], "load": [1, 5, 6, 7, 8], "node": [1, 2, 3, 5, 9, 10, 11, 24], "classif": [1, 4, 6, 7, 10, 11, 12, 24], "ogbn": [1, 24], "arxiv": [1, 24], "just": 1, "one": [1, 3, 4], "line": 1, "code": [1, 5, 9], "from": [1, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], "import": [1, 14, 19, 20], "ncscenarioload": [1, 8], "dataset_nam": [1, 5, 6, 7, 8], "num_task": [1, 5, 6, 7, 8, 22], "accuraci": [1, 5, 7, 8], "save_path": [1, 5, 6, 7, 8], "data": [1, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24], "incr_typ": [1, 5, 6, 7, 8, 9], "current": [1, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22], "support": [1, 2, 3, 4, 9, 23], "19": [1, 4], "nc": [1, 12], "link": [1, 5, 9, 10, 12, 14, 24], "lc": [1, 11], "lp": [1, 11], "gc": [1, 10], "task": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23], "il": [1, 2, 3, 4, 13, 16, 17, 18, 19, 20], "consist": [1, 2, 4], "each": [1, 2, 3, 4, 9, 10, 11, 12, 14, 21, 22, 23], "vari": 1, "thei": [1, 2], "ar": [1, 2, 3, 4, 9, 19], "often": 1, "disjoint": 1, "queri": [1, 22], "correspond": [1, 2], "inform": [1, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20], "thu": 1, "its": [1, 3, 4], "among": [1, 4], "consid": [1, 3, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20], "appli": [1, 13, 15], "where": [1, 3, 4, 5], "input": [1, 22, 23], "fix": [1, 5, 9], "grow": 1, "over": 1, "NOT": 1, "all": [1, 5, 6, 7, 8, 9, 21], "seen": [1, 23], "far": 1, "divid": [1, 2, 3, 4], "entiti": 1, "e": [1, 5, 9, 10, 11, 12, 14, 16, 17, 19, 20], "edg": [1, 2, 3, 4, 20], "accord": [1, 3, 5, 6, 7, 8, 9, 16, 19], "addition": [1, 9, 13, 14, 15, 16, 17, 18, 19, 20], "given": [1, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22], "respect": [1, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20], "time": [1, 2, 3, 4, 5, 7, 9], "except": 1, "dynam": 1, "evolv": 1, "across": 1, "th": [1, 21], "snapshot": 1, "group": [1, 2, 3, 4], "assign": [1, 3], "chronolog": 1, "usabl": 1, "when": [1, 6, 7, 8, 9, 10, 11, 12, 14, 22], "new": [1, 2, 17, 18], "It": [1, 6, 7, 8], "As": 1, "avalanch": 1, "seri": 1, "event": [1, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], "subprocess": 1, "receiv": 1, "b": 1, "model": [1, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24], "iter": [1, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], "c": [1, 24], "handl": [1, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], "necessari": 1, "befor": [1, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], "after": [1, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22], "modular": [1, 24], "function": [1, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22], "fill": 1, "out": [1, 3], "proce": 1, "note": 1, "option": [1, 5, 9, 10, 11, 12], "If": [1, 3, 5, 9, 10, 11, 12, 14, 23], "pre": 1, "oper": 1, "see": [1, 9, 14, 15, 16, 17, 18, 19, 20], "here": [1, 9], "detail": [1, 9, 14, 15, 16, 17, 18, 19, 20], "argument": [1, 5, 9], "role": [1, 9], "call": [1, 9, 10, 11, 12, 14, 22], "onc": 1, "prepareload": [1, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20], "gener": [1, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], "test": [1, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20], "should": 1, "return": [1, 5, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 23], "processbeforetrain": [1, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], "right": [1, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21], "everi": [1, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], "batch": [1, 6, 7, 8, 12, 22], "optim": [1, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], "singl": 1, "outcom": [1, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], "dure": [1, 2, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22], "processevaliter": [1, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20], "infer": [1, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20], "beforeinfer": [1, 9, 10, 11, 12, 17], "_reducetrainingstat": [1, 9], "end": [1, 9, 10, 11, 12, 14], "valu": [1, 9, 10, 11, 12, 14], "statist": [1, 2, 3, 4], "_reduceevalstat": [1, 9], "processtraininglog": [1, 9, 10, 11, 12], "reducetrainingstat": 1, "log": [1, 9, 10, 11, 12], "procssaftereachiter": 1, "reduceevalstat": 1, "determin": [1, 9, 10, 11, 12, 14, 23], "whether": [1, 2, 9, 10, 11, 12, 14], "stop": [1, 9, 10, 11, 12, 14], "rain": 1, "suppos": 1, "elast": [1, 16], "consolid": [1, 16], "ewc": [1, 14, 24], "specif": [1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 22], "l2": 1, "equat": 1, "mathcal": 1, "l": 1, "theta": 1, "_i": 1, "sum_": [1, 21], "j": [1, 21], "frac": [1, 21], "lambda": [1, 9], "f_j": 1, "_j": 1, "until": 1, "hyperparamet": [1, 9], "diagon": [1, 16], "squar": 1, "first": [1, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20], "deriv": 1, "scheme": [1, 13], "techniqu": [1, 13], "want": 1, "nctrainer": [1, 12, 13], "your": 1, "ncclassilewctrain": [1, 16], "pass": [1, 5, 9], "aforment": 1, "requir": [1, 15, 20], "matric": 1, "regualar": 1, "howev": 1, "cannot": 1, "obtain": 1, "resolv": 1, "issu": 1, "dictionari": [1, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], "training_st": [1, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], "intermedi": 1, "result": [1, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 23], "share": 1, "paramet": [1, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23], "param": 1, "shown": 1, "below": 1, "def": 1, "self": 1, "collect": [1, 9], "them": [1, 2, 3, 15, 17], "process": [1, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24], "loader": [1, 5, 6, 7, 8, 9, 22], "Then": [1, 9], "retreiv": 1, "calcul": 1, "gradient": [1, 17], "task_id": [1, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23], "curr_dataset": [1, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], "curr_model": [1, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], "curr_optim": [1, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], "curr_training_st": [1, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], "super": [1, 2], "name": [1, 5], "zeros_lik": 1, "p": 1, "named_paramet": 1, "train_load": 1, "total_num_item": 1, "_curr_batch": [1, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], "enumer": 1, "zero_grad": 1, "curr_result": 1, "loss": [1, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20], "backward": 1, "curr_num_item": 1, "shape": [1, 9, 10, 11, 12], "clone": 1, "detach": 1, "grad": 1, "append": 1, "backpropag": [1, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20], "summat": 1, "loss_reg": 1, "previous": [1, 18, 23], "_param": 1, "_fisher": 1, "zip": 1, "lamb": 1, "sum": 1, "total_loss": 1, "item": 1, "acc": 1, "eval_fn": 1, "pred": [1, 5, 6, 7, 8], "argmax": 1, "ndata": 1, "label": [1, 2, 3, 6, 7, 8], "devic": [1, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], "The": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23], "abov": [1, 9], "show": [1, 2], "full": 1, "similar": [1, 2], "exist": [1, 2], "modifi": 1, "sever": 1, "without": [1, 18, 21], "evaul": 1, "explan": 1, "about": 1, "pleas": 1, "refer": 1, "last": [1, 23], "experi": 1, "under": [1, 5], "also": [1, 23], "take": 1, "few": 1, "gcn": 1, "num_feat": 1, "num_class": 1, "256": 1, "dropout": 1, "25": [1, 2], "optimizer_fn": [1, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], "x": [1, 9, 23], "adam": 1, "lr": 1, "1e": 1, "loss_fn": [1, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], "nn": [1, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 23], "crossentropyloss": 1, "ignore_index": 1, "cuda": 1, "scheduler_fn": 1, "lr_schedul": 1, "reducelronplateau": 1, "mode": 1, "min": 1, "patienc": 1, "20": 1, "min_lr": 1, "arg": [1, 23], "001": 1, "verbos": [1, 23], "true": [1, 5, 6, 7, 8, 9, 23], "epoch_per_task": [1, 9, 10, 11, 12], "1000": 1, "object": [1, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], "learnabl": 1, "scenraio": 1, "schedul": [1, 9], "other": 1, "auxilari": 1, "custom": [1, 2], "creat": [1, 22], "start": 1, "member": 1, "measur": [1, 5, 6, 7, 8, 21], "complet": 1, "form": [1, 3, 4], "entri": 1, "ha": [1, 3, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20], "final": [1, 9, 10, 11, 12, 21], "design": [1, 24], "averag": [1, 2, 9], "ap": [1, 9, 10, 11, 12], "forget": [1, 18], "af": [1, 9, 10, 11, 12], "differ": [1, 3, 5, 6, 7, 8, 9, 13, 16, 17, 18, 19, 20, 21], "between": [1, 2, 3, 4, 18, 21], "forward": [1, 23], "transfer": 1, "fwt": [1, 9, 10, 11, 12], "intransig": 1, "int": [1, 5, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23], "joint": [1, 5, 6, 7, 8, 9, 21], "target": [1, 5, 6, 7, 8, 9, 21, 22], "full_mod": [1, 9], "simultan": 1, "bare": [1, 24], "enabl": 1, "imag": 2, "convert": 2, "pixel": 2, "There": 2, "10": [2, 3, 4, 6], "partit": 2, "5": [2, 3, 4], "separ": [2, 3], "accumul": [2, 3, 5, 6, 7, 8], "number": [2, 3, 4, 5, 9, 10, 11, 12, 22, 23], "55": 2, "000": 2, "70": [2, 4], "564": 2, "featur": [2, 3, 4, 23], "set": [2, 3, 4, 5, 6, 7, 8, 9, 14, 23], "45": 2, "117": 2, "941": 2, "molecul": 2, "atom": 2, "chemic": 2, "bond": 2, "origin": [2, 14, 15, 16, 17, 18, 19, 20], "repres": 2, "30": 2, "base": [2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 22, 23], "formul": [2, 3, 4], "868": [2, 3], "29": 2, "7": [2, 3, 4, 7], "65": 2, "4": [2, 4, 5], "binari": [2, 3, 4], "indic": [2, 3, 4, 21], "inhibit": 2, "hiv": 2, "viru": 2, "replic": 2, "structur": 2, "scaffold": 2, "split": [2, 6, 7, 8], "41": 2, "127": 2, "27": 2, "amount": 2, "traffic": 2, "locat": 2, "york": 2, "citi": 2, "an": [2, 3, 9, 23, 24], "hour": 2, "2021": 2, "direct": [2, 3], "two": [2, 3, 4], "weight": [2, 16, 18, 19, 20], "date": 2, "12": 2, "weekdai": 2, "mon": 2, "fri": 2, "weekend": 2, "sat": 2, "sun": 2, "760": 2, "265": 2, "1597": 2, "who": 3, "trust": 3, "whom": 3, "network": [3, 4, 20], "trade": 3, "platform": 3, "integ": 3, "rate": 3, "sign": 3, "sinc": [3, 13, 16, 17, 18, 19, 20, 24], "extern": 3, "degre": 3, "881": 3, "35": [3, 4], "592": 3, "21": 3, "hyperlink": 3, "comput": [3, 6, 7, 8, 9, 10, 11, 12, 15, 16, 17, 19, 20, 22], "scienc": 3, "articl": 3, "subfield": 3, "belong": [3, 4], "endpoint": 3, "later": 3, "11": [3, 4], "701": 3, "431": 3, "726": 3, "300": 3, "": 3, "co": [3, 4], "authorship": 3, "author": 3, "public": [3, 4], "year": [3, 4], "235": 3, "285": 3, "465": 3, "128": [3, 4], "citat": 4, "scientif": 4, "field": 4, "select": [4, 15], "six": 4, "seven": 4, "three": [4, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20], "708": 4, "556": 4, "433": 4, "327": 4, "104": 4, "703": 4, "793": 4, "126": 4, "842": 4, "710": 4, "purchas": 4, "47": 4, "categori": 4, "increas": [4, 17], "449": 4, "029": 4, "61": 4, "859": 4, "140": 4, "100": 4, "meaning": 4, "associ": 4, "112": 4, "presenc": 4, "avail": 4, "speci": 4, "132": 4, "534": 4, "39": 4, "561": 4, "252": 4, "2x112": 4, "research": 4, "paper": [4, 14, 15, 16, 17, 18, 19, 20], "40": 4, "subject": 4, "area": 4, "similarli": 4, "169": 4, "343": 4, "232": 4, "486": 4, "our": [5, 9, 22, 23], "sceanrio": 5, "respons": 5, "commun": 5, "perform": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 24], "sesir": 5, "therefor": [5, 9], "further": 5, "level": [5, 9, 24], "basescenarioload": [5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 19, 20], "metric": [5, 6, 7, 8, 9, 10, 11, 12, 24], "kwarg": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 23], "sourc": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23], "str": [5, 6, 7, 8, 9], "path": 5, "file": 5, "save": [5, 14], "spec": [5, 6, 7, 8], "aucroc": [5, 7], "hit": [5, 7], "k": 5, "dict": [5, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], "keyword": [5, 9], "g": [5, 9, 24], "task_shuffl": [5, 6, 7, 8], "bool": [5, 23], "els": 5, "random": [5, 9], "_init_continual_scenario": [5, 6, 7, 8], "entir": [5, 6, 7, 8], "initi": [5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 19, 20, 21], "_update_accumulated_dataset": [5, 6, 7, 8], "updat": [5, 6, 7, 8, 14], "previou": [5, 6, 7, 8, 14, 17, 18], "_update_target_dataset": [5, 6, 7, 8], "get_accumulated_dataset": 5, "get_current_dataset": 5, "next_task": [5, 6, 7, 8], "denot": [5, 6, 7, 8, 21], "tensor": [5, 6, 7, 8, 22, 23], "output": [5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 17, 18, 19, 20, 22, 23], "gcscenarioload": 6, "sceanario": [6, 7, 8], "usag": [6, 7, 8], "ogbg": [6, 24], "molhiv": [6, 24], "rocauc": 6, "_get_eval_result_inn": [6, 7, 8], "target_split": [6, 7, 8], "inner": [6, 7, 8, 23], "get_eval_result": [6, 7, 8], "val": [6, 7, 8], "get_accum_eval_result": [6, 7, 8], "get_simple_eval_result": [6, 7, 8, 22], "curr_batch_pr": [6, 7, 8], "curr_batch_gt": [6, 7, 8], "ignor": [6, 7, 8, 22], "configur": [6, 7, 8, 22], "empti": [6, 7, 8], "lcscenarioload": 7, "bitcoin": [7, 24], "lpscenarioload": 7, "ogbl": [7, 24], "collab": [7, 24], "50": 7, "cora": [8, 24], "load_node_dataset": 8, "trainer": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], "procudur": 9, "extend": [9, 13, 16, 17, 18, 19, 20, 22, 24], "inherit": 9, "assum": 9, "adaptivelinear": [9, 24], "classifi": 9, "basetrain": [9, 10, 11, 12], "none": [9, 23], "scenarioload": [9, 10, 11, 12, 14, 15, 16, 17, 19, 20, 22], "A": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], "gpu": 9, "instanc": [9, 17, 22], "tranin": 9, "seed": 9, "evalu": [9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22], "accum": [9, 23], "_evalwrapp": 9, "curr_batch": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], "curr_stat": 9, "wrapper": 9, "main": 9, "processevalitear": 9, "stat": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], "evalut": 9, "epoch": [9, 10, 11, 12, 14], "minibatch": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], "store": [9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20], "helper": 9, "default": [9, 15], "behavior": [9, 13, 14, 16, 17, 18, 19, 20], "kei": 9, "_reset_model": 9, "target_model": 9, "reiniti": 9, "re": [9, 15], "_reset_optim": 9, "target_optim": 9, "_trainwrapp": 9, "processtrainitear": 9, "state": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], "afterinfer": [9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20], "execut": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], "step": [9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20], "recommend": [9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20], "properti": 9, "curr_task": 9, "index": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 23], "t": 9, "retriev": 9, "inittrainingst": [9, 10, 11, 12, 14, 15, 16, 17, 19, 20], "intermedei": [9, 10, 11, 12, 14, 16, 17, 19, 20], "optmiz": [9, 10, 11, 12, 14, 15, 16, 17, 19, 20], "Its": [9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20], "type": [9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20], "dgldataset": [9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20], "tupl": [9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20], "second": [9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 22], "third": [9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20], "processaftereachiter": [9, 10, 11, 12, 14], "curr_iter_result": [9, 10, 11, 12, 14], "fals": [9, 10, 11, 12, 14, 20, 23], "processaftertrain": [9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20], "boolean": [9, 10, 11, 12, 14], "processtrainiter": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], "epoch_cnt": [9, 10, 11, 12], "val_metric_result": [9, 10, 11, 12], "train_stat": [9, 10, 11, 12], "val_stat": [9, 10, 11, 12], "conta": [9, 10, 11, 12], "maximum": [9, 10, 11, 12], "And": [9, 10, 11, 12], "matrix": [9, 10, 11, 12, 16, 21], "gctrainer": 10, "common": [10, 11, 12, 14, 15, 16, 17, 19, 20, 24], "lctrainer": 11, "_curr_dataset": [11, 13, 16, 17, 18, 19, 20], "lptrainer": [11, 13], "ncminibatchtrain": [12, 13], "mini": 12, "neighborhood": 12, "sampler": [12, 15], "ncclassilbareminibatchtrain": 13, "same": [13, 14, 16, 17, 18, 19, 20], "ncclassilbaretrain": 13, "ncdomainilbaretrain": 13, "format": [13, 16, 17, 18, 19, 20], "slightli": [13, 16, 17, 18, 19, 20], "nctaskilbaretrain": 13, "nctimeilbaretrain": 13, "lcclassilbaretrain": 13, "lctaskilbaretrain": 13, "lctimeilbaretrain": 13, "lpdomainilbaretrain": 13, "lptimeilbaretrain": 13, "gcclassilbaretrain": 13, "gcdomainilbaretrain": 13, "gctaskilbaretrain": 13, "gctimeilbaretrain": 13, "mehtod": 14, "combin": 14, "replai": [14, 17], "regular": [14, 16, 19, 20], "approach": 14, "ncclassilcgnntrain": 14, "put": 14, "buffer": [14, 15], "memori": [14, 17, 19], "handler": 14, "choos": 14, "ncdomainilcgnntrain": 14, "nctaskilcgnntrain": 14, "nctimeilcgnntrain": 14, "whichh": 15, "carefulli": 15, "sampl": [15, 17], "topolog": [15, 20], "ncclassilergnnminibatchtrain": 15, "ergnn": 15, "cm": 15, "ncclassilergnntrain": 15, "ncdomainilergnntrain": 15, "nctaskilergnntrain": 15, "nctimeilergnntrain": 15, "fisher": 16, "ncclassilewcminibatchtrain": 16, "penalti": [16, 19], "term": [16, 19], "ncdomainilewctrain": 16, "nctaskilewctrain": 16, "nctimeilewctrain": 16, "lcclassilewctrain": 16, "lctaskilewctrain": 16, "lctimeilewctrain": 16, "lpdomainilewctrain": 16, "lptimeilewctrain": 16, "gcclassilewctrain": 16, "gcdomainilewctrain": 16, "gctaskilewctrain": 16, "gctimeilewctrain": 16, "episod": 17, "prevent": 17, "while": 17, "ncclassilgemminibatchtrain": 17, "control": 17, "quadrat": 17, "program": 17, "futur": 17, "ncclassilgemtrain": 17, "ncdomainilgemtrain": 17, "nctaskilgemtrain": 17, "nctimeilgemtrain": 17, "lcclassilgemtrain": 17, "lctaskilgemtrain": 17, "lctimeilgemtrain": 17, "lpdomainilgemtrain": 17, "lptimeilgemtrain": 17, "gcclassilgemtrain": 17, "gcdomainilgemtrain": 17, "gctaskilgemtrain": 17, "gctimeilgemtrain": 17, "minim": 18, "ncclassillwfminibatchtrain": 18, "knowledg": 18, "distil": 18, "ncclassillwftrain": 18, "ncdomainillwftrain": 18, "nctaskillwftrain": 18, "nctimeillwftrain": 18, "lcclassillwftrain": 18, "lctaskillwftrain": 18, "lctimeillwftrain": 18, "lpdomainillwftrain": 18, "lptimeillwftrain": 18, "gcclassillwftrain": 18, "gcdomainillwftrain": 18, "gctaskillwftrain": 18, "gctimeillwftrain": 18, "awar": 19, "synaps": 19, "sensit": 19, "ncclassilmasminibatchtrain": 19, "ncclassilmastrain": 19, "ncdomainilmastrain": 19, "nctaskilmastrain": 19, "nctimeilmastrain": 19, "lcclassilmastrain": 19, "lctaskilmastrain": 19, "lctimeilmastrain": 19, "lpdomainilmastrain": 19, "lptimeilmastrain": 19, "gcclassilmastrain": 19, "gcdomainilmastrain": 19, "gctaskilmastrain": 19, "gctimeilmastrain": 19, "stabil": 20, "aggreg": 20, "neural": 20, "through": 20, "ncclassiltwpminibatchtrain": 20, "return_elist": 20, "attent": 20, "mechan": 20, "ncclassiltwptrain": 20, "ncdomainiltwptrain": 20, "nctaskiltwptrain": 20, "nctimeiltwptrain": 20, "lcclassiltwptrain": 20, "lctaskiltwptrain": 20, "lctimeiltwptrain": 20, "lpdomainiltwptrain": 20, "lptimeiltwptrain": 20, "gcclassiltwptrain": 20, "gcdomainiltwptrain": 20, "gctaskiltwptrain": 20, "gctimeiltwptrain": 20, "mathemat": 21, "express": 21, "mathrm": 21, "m": 21, "_": 21, "r_i": 21, "randomli": 21, "n": 21, "ani": [21, 23], "r_": 21, "auroc": 22, "q": 22, "easili": [22, 24], "own": 22, "id": [22, 23], "simple_ev": 22, "accuracyevalu": 22, "rocaucevalu": 22, "score": 22, "hitsevalu": 22, "instead": 22, "linear": 23, "layer": 23, "variabl": 23, "mask": 23, "ideal": 23, "help": 23, "in_channel": 23, "channel": 23, "in_featur": 23, "out_channel": 23, "out_featur": 23, "bia": 23, "logit": 23, "task_mask": 23, "otherwis": 23, "get_output_mask": 23, "observ": 23, "observe_output": 23, "new_output": 23, "By": 23, "Be": 24, "nchmark": 24, "raph": 24, "cont": 24, "ual": 24, "easi": 24, "fool": 24, "proof": 24, "reusabl": 24, "algorithm": 24, "instal": 24, "setup": 24, "cites": 24, "coraful": 24, "product": 24, "protein": 24, "otc": 24, "wiki": 24, "mnist": 24, "cifar10": 24, "aromat": 24, "nyc": 24, "taxi": 24, "lwf": 24, "ma": 24, "gem": 24, "twp": 24, "er": 24, "gnn": 24, "continualgnn": 24}, "objects": {"begin.algorithms.bare": [[13, 0, 0, "-", "graphs"], [13, 0, 0, "-", "links"], [13, 0, 0, "-", "nodes"]], "begin.algorithms.bare.graphs": [[13, 1, 1, "", "GCClassILBareTrainer"], [13, 1, 1, "", "GCDomainILBareTrainer"], [13, 1, 1, "", "GCTaskILBareTrainer"], [13, 1, 1, "", "GCTimeILBareTrainer"]], "begin.algorithms.bare.graphs.GCDomainILBareTrainer": [[13, 2, 1, "", "processBeforeTraining"], [13, 2, 1, "", "processEvalIteration"], [13, 2, 1, "", "processTrainIteration"]], "begin.algorithms.bare.graphs.GCTaskILBareTrainer": [[13, 2, 1, "", "inference"]], "begin.algorithms.bare.links": [[13, 1, 1, "", "LCClassILBareTrainer"], [13, 1, 1, "", "LCTaskILBareTrainer"], [13, 1, 1, "", "LCTimeILBareTrainer"], [13, 1, 1, "", "LPDomainILBareTrainer"], [13, 1, 1, "", "LPTimeILBareTrainer"]], "begin.algorithms.bare.links.LCTaskILBareTrainer": [[13, 2, 1, "", "inference"], [13, 2, 1, "", "prepareLoader"]], "begin.algorithms.bare.links.LCTimeILBareTrainer": [[13, 2, 1, "", "afterInference"], [13, 2, 1, "", "processBeforeTraining"], [13, 2, 1, "", "processEvalIteration"]], "begin.algorithms.bare.nodes": [[13, 1, 1, "", "NCClassILBareMinibatchTrainer"], [13, 1, 1, "", "NCClassILBareTrainer"], [13, 1, 1, "", "NCDomainILBareTrainer"], [13, 1, 1, "", "NCTaskILBareTrainer"], [13, 1, 1, "", "NCTimeILBareTrainer"]], "begin.algorithms.bare.nodes.NCDomainILBareTrainer": [[13, 2, 1, "", "processBeforeTraining"], [13, 2, 1, "", "processEvalIteration"], [13, 2, 1, "", "processTrainIteration"]], "begin.algorithms.bare.nodes.NCTaskILBareTrainer": [[13, 2, 1, "", "inference"]], "begin.algorithms.cgnn": [[14, 0, 0, "-", "nodes"]], "begin.algorithms.cgnn.nodes": [[14, 1, 1, "", "NCClassILCGNNTrainer"], [14, 1, 1, "", "NCDomainILCGNNTrainer"], [14, 1, 1, "", "NCTaskILCGNNTrainer"], [14, 1, 1, "", "NCTimeILCGNNTrainer"]], "begin.algorithms.cgnn.nodes.NCClassILCGNNTrainer": [[14, 2, 1, "", "initTrainingStates"], [14, 2, 1, "", "prepareLoader"], [14, 2, 1, "", "processAfterEachIteration"], [14, 2, 1, "", "processAfterTraining"], [14, 2, 1, "", "processBeforeTraining"], [14, 2, 1, "", "processTrainIteration"]], "begin.algorithms.cgnn.nodes.NCTaskILCGNNTrainer": [[14, 2, 1, "", "initTrainingStates"], [14, 2, 1, "", "prepareLoader"], [14, 2, 1, "", "processAfterEachIteration"], [14, 2, 1, "", "processAfterTraining"], [14, 2, 1, "", "processBeforeTraining"], [14, 2, 1, "", "processEvalIteration"], [14, 2, 1, "", "processTrainIteration"]], "begin.algorithms.ergnn": [[15, 0, 0, "-", "nodes"]], "begin.algorithms.ergnn.nodes": [[15, 1, 1, "", "NCClassILERGNNMinibatchTrainer"], [15, 1, 1, "", "NCClassILERGNNTrainer"], [15, 1, 1, "", "NCDomainILERGNNTrainer"], [15, 1, 1, "", "NCTaskILERGNNTrainer"], [15, 1, 1, "", "NCTimeILERGNNTrainer"]], "begin.algorithms.ergnn.nodes.NCClassILERGNNMinibatchTrainer": [[15, 2, 1, "", "afterInference"], [15, 2, 1, "", "inference"], [15, 2, 1, "", "initTrainingStates"], [15, 2, 1, "", "processAfterTraining"], [15, 2, 1, "", "processBeforeTraining"]], "begin.algorithms.ergnn.nodes.NCClassILERGNNTrainer": [[15, 2, 1, "", "afterInference"], [15, 2, 1, "", "inference"], [15, 2, 1, "", "initTrainingStates"], [15, 2, 1, "", "processAfterTraining"]], "begin.algorithms.ergnn.nodes.NCTaskILERGNNTrainer": [[15, 2, 1, "", "afterInference"], [15, 2, 1, "", "inference"], [15, 2, 1, "", "initTrainingStates"], [15, 2, 1, "", "processAfterTraining"]], "begin.algorithms.ergnn.nodes.NCTimeILERGNNTrainer": [[15, 2, 1, "", "initTrainingStates"], [15, 2, 1, "", "processAfterTraining"], [15, 2, 1, "", "processTrainIteration"]], "begin.algorithms.ewc": [[16, 0, 0, "-", "graphs"], [16, 0, 0, "-", "links"], [16, 0, 0, "-", "nodes"]], "begin.algorithms.ewc.graphs": [[16, 1, 1, "", "GCClassILEWCTrainer"], [16, 1, 1, "", "GCDomainILEWCTrainer"], [16, 1, 1, "", "GCTaskILEWCTrainer"], [16, 1, 1, "", "GCTimeILEWCTrainer"]], "begin.algorithms.ewc.graphs.GCClassILEWCTrainer": [[16, 2, 1, "", "afterInference"], [16, 2, 1, "", "initTrainingStates"], [16, 2, 1, "", "processAfterTraining"]], "begin.algorithms.ewc.graphs.GCDomainILEWCTrainer": [[16, 2, 1, "", "initTrainingStates"], [16, 2, 1, "", "processAfterTraining"], [16, 2, 1, "", "processBeforeTraining"], [16, 2, 1, "", "processEvalIteration"], [16, 2, 1, "", "processTrainIteration"]], "begin.algorithms.ewc.graphs.GCTaskILEWCTrainer": [[16, 2, 1, "", "afterInference"], [16, 2, 1, "", "inference"], [16, 2, 1, "", "initTrainingStates"], [16, 2, 1, "", "processAfterTraining"]], "begin.algorithms.ewc.links": [[16, 1, 1, "", "LCClassILEWCTrainer"], [16, 1, 1, "", "LCTaskILEWCTrainer"], [16, 1, 1, "", "LCTimeILEWCTrainer"], [16, 1, 1, "", "LPDomainILEWCTrainer"], [16, 1, 1, "", "LPTimeILEWCTrainer"]], "begin.algorithms.ewc.links.LCClassILEWCTrainer": [[16, 2, 1, "", "afterInference"], [16, 2, 1, "", "initTrainingStates"], [16, 2, 1, "", "processAfterTraining"]], "begin.algorithms.ewc.links.LCTaskILEWCTrainer": [[16, 2, 1, "", "afterInference"], [16, 2, 1, "", "inference"], [16, 2, 1, "", "initTrainingStates"], [16, 2, 1, "", "prepareLoader"], [16, 2, 1, "", "processAfterTraining"]], "begin.algorithms.ewc.links.LCTimeILEWCTrainer": [[16, 2, 1, "", "afterInference"], [16, 2, 1, "", "initTrainingStates"], [16, 2, 1, "", "processAfterTraining"], [16, 2, 1, "", "processBeforeTraining"], [16, 2, 1, "", "processEvalIteration"]], "begin.algorithms.ewc.links.LPTimeILEWCTrainer": [[16, 2, 1, "", "initTrainingStates"], [16, 2, 1, "", "processAfterTraining"], [16, 2, 1, "", "processTrainIteration"]], "begin.algorithms.ewc.nodes": [[16, 1, 1, "", "NCClassILEWCMinibatchTrainer"], [16, 1, 1, "", "NCClassILEWCTrainer"], [16, 1, 1, "", "NCDomainILEWCTrainer"], [16, 1, 1, "", "NCTaskILEWCTrainer"], [16, 1, 1, "", "NCTimeILEWCTrainer"]], "begin.algorithms.ewc.nodes.NCClassILEWCMinibatchTrainer": [[16, 2, 1, "", "afterInference"], [16, 2, 1, "", "initTrainingStates"], [16, 2, 1, "", "processAfterTraining"]], "begin.algorithms.ewc.nodes.NCClassILEWCTrainer": [[16, 2, 1, "", "afterInference"], [16, 2, 1, "", "initTrainingStates"], [16, 2, 1, "", "processAfterTraining"]], "begin.algorithms.ewc.nodes.NCDomainILEWCTrainer": [[16, 2, 1, "", "initTrainingStates"], [16, 2, 1, "", "processAfterTraining"], [16, 2, 1, "", "processBeforeTraining"], [16, 2, 1, "", "processEvalIteration"], [16, 2, 1, "", "processTrainIteration"]], "begin.algorithms.ewc.nodes.NCTaskILEWCTrainer": [[16, 2, 1, "", "afterInference"], [16, 2, 1, "", "inference"], [16, 2, 1, "", "initTrainingStates"], [16, 2, 1, "", "processAfterTraining"]], "begin.algorithms.gem": [[17, 0, 0, "-", "graphs"], [17, 0, 0, "-", "links"], [17, 0, 0, "-", "nodes"]], "begin.algorithms.gem.graphs": [[17, 1, 1, "", "GCClassILGEMTrainer"], [17, 1, 1, "", "GCDomainILGEMTrainer"], [17, 1, 1, "", "GCTaskILGEMTrainer"], [17, 1, 1, "", "GCTimeILGEMTrainer"]], "begin.algorithms.gem.graphs.GCClassILGEMTrainer": [[17, 2, 1, "", "afterInference"], [17, 2, 1, "", "beforeInference"], [17, 2, 1, "", "initTrainingStates"], [17, 2, 1, "", "processAfterTraining"], [17, 2, 1, "", "processBeforeTraining"]], "begin.algorithms.gem.graphs.GCDomainILGEMTrainer": [[17, 2, 1, "", "initTrainingStates"], [17, 2, 1, "", "processAfterTraining"], [17, 2, 1, "", "processBeforeTraining"], [17, 2, 1, "", "processEvalIteration"], [17, 2, 1, "", "processTrainIteration"]], "begin.algorithms.gem.graphs.GCTaskILGEMTrainer": [[17, 2, 1, "", "afterInference"], [17, 2, 1, "", "beforeInference"], [17, 2, 1, "", "inference"], [17, 2, 1, "", "initTrainingStates"], [17, 2, 1, "", "processAfterTraining"], [17, 2, 1, "", "processBeforeTraining"]], "begin.algorithms.gem.links": [[17, 1, 1, "", "LCClassILGEMTrainer"], [17, 1, 1, "", "LCTaskILGEMTrainer"], [17, 1, 1, "", "LCTimeILGEMTrainer"], [17, 1, 1, "", "LPDomainILGEMTrainer"], [17, 1, 1, "", "LPTimeILGEMTrainer"]], "begin.algorithms.gem.links.LCClassILGEMTrainer": [[17, 2, 1, "", "afterInference"], [17, 2, 1, "", "beforeInference"], [17, 2, 1, "", "initTrainingStates"], [17, 2, 1, "", "processAfterTraining"]], "begin.algorithms.gem.links.LCTaskILGEMTrainer": [[17, 2, 1, "", "afterInference"], [17, 2, 1, "", "beforeInference"], [17, 2, 1, "", "inference"], [17, 2, 1, "", "initTrainingStates"], [17, 2, 1, "", "prepareLoader"], [17, 2, 1, "", "processAfterTraining"]], "begin.algorithms.gem.links.LCTimeILGEMTrainer": [[17, 2, 1, "", "afterInference"], [17, 2, 1, "", "beforeInference"], [17, 2, 1, "", "initTrainingStates"], [17, 2, 1, "", "processAfterTraining"], [17, 2, 1, "", "processBeforeTraining"], [17, 2, 1, "", "processEvalIteration"]], "begin.algorithms.gem.links.LPTimeILGEMTrainer": [[17, 2, 1, "", "initTrainingStates"], [17, 2, 1, "", "processAfterTraining"], [17, 2, 1, "", "processBeforeTraining"], [17, 2, 1, "", "processTrainIteration"]], "begin.algorithms.gem.nodes": [[17, 1, 1, "", "NCClassILGEMMinibatchTrainer"], [17, 1, 1, "", "NCClassILGEMTrainer"], [17, 1, 1, "", "NCDomainILGEMTrainer"], [17, 1, 1, "", "NCTaskILGEMTrainer"], [17, 1, 1, "", "NCTimeILGEMTrainer"]], "begin.algorithms.gem.nodes.NCClassILGEMMinibatchTrainer": [[17, 2, 1, "", "afterInference"], [17, 2, 1, "", "beforeInference"], [17, 2, 1, "", "initTrainingStates"], [17, 2, 1, "", "processAfterTraining"]], "begin.algorithms.gem.nodes.NCClassILGEMTrainer": [[17, 2, 1, "", "afterInference"], [17, 2, 1, "", "beforeInference"], [17, 2, 1, "", "initTrainingStates"], [17, 2, 1, "", "processAfterTraining"]], "begin.algorithms.gem.nodes.NCDomainILGEMTrainer": [[17, 2, 1, "", "initTrainingStates"], [17, 2, 1, "", "processAfterTraining"], [17, 2, 1, "", "processBeforeTraining"], [17, 2, 1, "", "processEvalIteration"], [17, 2, 1, "", "processTrainIteration"]], "begin.algorithms.gem.nodes.NCTaskILGEMTrainer": [[17, 2, 1, "", "afterInference"], [17, 2, 1, "", "beforeInference"], [17, 2, 1, "", "inference"], [17, 2, 1, "", "initTrainingStates"], [17, 2, 1, "", "processAfterTraining"]], "begin.algorithms.lwf": [[18, 0, 0, "-", "graphs"], [18, 0, 0, "-", "links"], [18, 0, 0, "-", "nodes"]], "begin.algorithms.lwf.graphs": [[18, 1, 1, "", "GCClassILLwFTrainer"], [18, 1, 1, "", "GCDomainILLwFTrainer"], [18, 1, 1, "", "GCTaskILLwFTrainer"], [18, 1, 1, "", "GCTimeILLwFTrainer"]], "begin.algorithms.lwf.graphs.GCClassILLwFTrainer": [[18, 2, 1, "", "afterInference"], [18, 2, 1, "", "processAfterTraining"]], "begin.algorithms.lwf.graphs.GCDomainILLwFTrainer": [[18, 2, 1, "", "processAfterTraining"], [18, 2, 1, "", "processBeforeTraining"], [18, 2, 1, "", "processEvalIteration"], [18, 2, 1, "", "processTrainIteration"]], "begin.algorithms.lwf.graphs.GCTaskILLwFTrainer": [[18, 2, 1, "", "afterInference"], [18, 2, 1, "", "inference"], [18, 2, 1, "", "processBeforeTraining"]], "begin.algorithms.lwf.links": [[18, 1, 1, "", "LCClassILLwFTrainer"], [18, 1, 1, "", "LCTaskILLwFTrainer"], [18, 1, 1, "", "LCTimeILLwFTrainer"], [18, 1, 1, "", "LPDomainILLwFTrainer"], [18, 1, 1, "", "LPTimeILLwFTrainer"]], "begin.algorithms.lwf.links.LCClassILLwFTrainer": [[18, 2, 1, "", "afterInference"], [18, 2, 1, "", "processAfterTraining"]], "begin.algorithms.lwf.links.LCTaskILLwFTrainer": [[18, 2, 1, "", "afterInference"], [18, 2, 1, "", "inference"], [18, 2, 1, "", "prepareLoader"], [18, 2, 1, "", "processBeforeTraining"]], "begin.algorithms.lwf.links.LCTimeILLwFTrainer": [[18, 2, 1, "", "afterInference"], [18, 2, 1, "", "processAfterTraining"], [18, 2, 1, "", "processBeforeTraining"], [18, 2, 1, "", "processEvalIteration"]], "begin.algorithms.lwf.links.LPTimeILLwFTrainer": [[18, 2, 1, "", "processAfterTraining"], [18, 2, 1, "", "processTrainIteration"]], "begin.algorithms.lwf.nodes": [[18, 1, 1, "", "NCClassILLwFMinibatchTrainer"], [18, 1, 1, "", "NCClassILLwFTrainer"], [18, 1, 1, "", "NCDomainILLwFTrainer"], [18, 1, 1, "", "NCTaskILLwFTrainer"], [18, 1, 1, "", "NCTimeILLwFTrainer"]], "begin.algorithms.lwf.nodes.NCClassILLwFMinibatchTrainer": [[18, 2, 1, "", "afterInference"], [18, 2, 1, "", "processAfterTraining"]], "begin.algorithms.lwf.nodes.NCClassILLwFTrainer": [[18, 2, 1, "", "afterInference"], [18, 2, 1, "", "processAfterTraining"]], "begin.algorithms.lwf.nodes.NCDomainILLwFTrainer": [[18, 2, 1, "", "processAfterTraining"], [18, 2, 1, "", "processBeforeTraining"], [18, 2, 1, "", "processEvalIteration"], [18, 2, 1, "", "processTrainIteration"]], "begin.algorithms.lwf.nodes.NCTaskILLwFTrainer": [[18, 2, 1, "", "afterInference"], [18, 2, 1, "", "inference"], [18, 2, 1, "", "processBeforeTraining"]], "begin.algorithms.mas": [[19, 0, 0, "-", "graphs"], [19, 0, 0, "-", "links"], [19, 0, 0, "-", "nodes"]], "begin.algorithms.mas.graphs": [[19, 1, 1, "", "GCClassILMASTrainer"], [19, 1, 1, "", "GCDomainILMASTrainer"], [19, 1, 1, "", "GCTaskILMASTrainer"], [19, 1, 1, "", "GCTimeILMASTrainer"]], "begin.algorithms.mas.graphs.GCClassILMASTrainer": [[19, 2, 1, "", "afterInference"], [19, 2, 1, "", "initTrainingStates"], [19, 2, 1, "", "processAfterTraining"]], "begin.algorithms.mas.graphs.GCDomainILMASTrainer": [[19, 2, 1, "", "initTrainingStates"], [19, 2, 1, "", "processAfterTraining"], [19, 2, 1, "", "processBeforeTraining"], [19, 2, 1, "", "processEvalIteration"], [19, 2, 1, "", "processTrainIteration"]], "begin.algorithms.mas.graphs.GCTaskILMASTrainer": [[19, 2, 1, "", "afterInference"], [19, 2, 1, "", "inference"], [19, 2, 1, "", "initTrainingStates"], [19, 2, 1, "", "processAfterTraining"]], "begin.algorithms.mas.links": [[19, 1, 1, "", "LCClassILMASTrainer"], [19, 1, 1, "", "LCTaskILMASTrainer"], [19, 1, 1, "", "LCTimeILMASTrainer"], [19, 1, 1, "", "LPDomainILMASTrainer"], [19, 1, 1, "", "LPTimeILMASTrainer"]], "begin.algorithms.mas.links.LCClassILMASTrainer": [[19, 2, 1, "", "afterInference"], [19, 2, 1, "", "initTrainingStates"], [19, 2, 1, "", "processAfterTraining"]], "begin.algorithms.mas.links.LCTaskILMASTrainer": [[19, 2, 1, "", "afterInference"], [19, 2, 1, "", "inference"], [19, 2, 1, "", "initTrainingStates"], [19, 2, 1, "", "prepareLoader"], [19, 2, 1, "", "processAfterTraining"]], "begin.algorithms.mas.links.LCTimeILMASTrainer": [[19, 2, 1, "", "afterInference"], [19, 2, 1, "", "initTrainingStates"], [19, 2, 1, "", "processAfterTraining"], [19, 2, 1, "", "processBeforeTraining"], [19, 2, 1, "", "processEvalIteration"]], "begin.algorithms.mas.links.LPTimeILMASTrainer": [[19, 2, 1, "", "initTrainingStates"], [19, 2, 1, "", "processAfterTraining"], [19, 2, 1, "", "processTrainIteration"]], "begin.algorithms.mas.nodes": [[19, 1, 1, "", "NCClassILMASMinibatchTrainer"], [19, 1, 1, "", "NCClassILMASTrainer"], [19, 1, 1, "", "NCDomainILMASTrainer"], [19, 1, 1, "", "NCTaskILMASTrainer"], [19, 1, 1, "", "NCTimeILMASTrainer"]], "begin.algorithms.mas.nodes.NCClassILMASMinibatchTrainer": [[19, 2, 1, "", "afterInference"], [19, 2, 1, "", "initTrainingStates"], [19, 2, 1, "", "processAfterTraining"]], "begin.algorithms.mas.nodes.NCClassILMASTrainer": [[19, 2, 1, "", "afterInference"], [19, 2, 1, "", "initTrainingStates"], [19, 2, 1, "", "processAfterTraining"]], "begin.algorithms.mas.nodes.NCDomainILMASTrainer": [[19, 2, 1, "", "initTrainingStates"], [19, 2, 1, "", "processAfterTraining"], [19, 2, 1, "", "processBeforeTraining"], [19, 2, 1, "", "processEvalIteration"], [19, 2, 1, "", "processTrainIteration"]], "begin.algorithms.mas.nodes.NCTaskILMASTrainer": [[19, 2, 1, "", "afterInference"], [19, 2, 1, "", "inference"], [19, 2, 1, "", "initTrainingStates"], [19, 2, 1, "", "processAfterTraining"]], "begin.algorithms.twp": [[20, 0, 0, "-", "graphs"], [20, 0, 0, "-", "links"], [20, 0, 0, "-", "nodes"]], "begin.algorithms.twp.graphs": [[20, 1, 1, "", "GCClassILTWPTrainer"], [20, 1, 1, "", "GCDomainILTWPTrainer"], [20, 1, 1, "", "GCTaskILTWPTrainer"], [20, 1, 1, "", "GCTimeILTWPTrainer"]], "begin.algorithms.twp.graphs.GCClassILTWPTrainer": [[20, 2, 1, "", "afterInference"], [20, 2, 1, "", "inference"], [20, 2, 1, "", "initTrainingStates"], [20, 2, 1, "", "processAfterTraining"]], "begin.algorithms.twp.graphs.GCDomainILTWPTrainer": [[20, 2, 1, "", "initTrainingStates"], [20, 2, 1, "", "processAfterTraining"], [20, 2, 1, "", "processBeforeTraining"], [20, 2, 1, "", "processEvalIteration"], [20, 2, 1, "", "processTrainIteration"]], "begin.algorithms.twp.graphs.GCTaskILTWPTrainer": [[20, 2, 1, "", "afterInference"], [20, 2, 1, "", "inference"], [20, 2, 1, "", "initTrainingStates"], [20, 2, 1, "", "processAfterTraining"]], "begin.algorithms.twp.links": [[20, 1, 1, "", "LCClassILTWPTrainer"], [20, 1, 1, "", "LCTaskILTWPTrainer"], [20, 1, 1, "", "LCTimeILTWPTrainer"], [20, 1, 1, "", "LPDomainILTWPTrainer"], [20, 1, 1, "", "LPTimeILTWPTrainer"]], "begin.algorithms.twp.links.LCClassILTWPTrainer": [[20, 2, 1, "", "afterInference"], [20, 2, 1, "", "inference"], [20, 2, 1, "", "initTrainingStates"], [20, 2, 1, "", "processAfterTraining"]], "begin.algorithms.twp.links.LCTaskILTWPTrainer": [[20, 2, 1, "", "afterInference"], [20, 2, 1, "", "inference"], [20, 2, 1, "", "initTrainingStates"], [20, 2, 1, "", "prepareLoader"], [20, 2, 1, "", "processAfterTraining"]], "begin.algorithms.twp.links.LCTimeILTWPTrainer": [[20, 2, 1, "", "afterInference"], [20, 2, 1, "", "inference"], [20, 2, 1, "", "initTrainingStates"], [20, 2, 1, "", "processAfterTraining"], [20, 2, 1, "", "processBeforeTraining"], [20, 2, 1, "", "processEvalIteration"]], "begin.algorithms.twp.links.LPTimeILTWPTrainer": [[20, 2, 1, "", "initTrainingStates"], [20, 2, 1, "", "processAfterTraining"], [20, 2, 1, "", "processTrainIteration"]], "begin.algorithms.twp.nodes": [[20, 1, 1, "", "NCClassILTWPMinibatchTrainer"], [20, 1, 1, "", "NCClassILTWPTrainer"], [20, 1, 1, "", "NCDomainILTWPTrainer"], [20, 1, 1, "", "NCTaskILTWPTrainer"], [20, 1, 1, "", "NCTimeILTWPTrainer"]], "begin.algorithms.twp.nodes.NCClassILTWPMinibatchTrainer": [[20, 2, 1, "", "afterInference"], [20, 2, 1, "", "inference"], [20, 2, 1, "", "initTrainingStates"], [20, 2, 1, "", "processAfterTraining"]], "begin.algorithms.twp.nodes.NCClassILTWPTrainer": [[20, 2, 1, "", "afterInference"], [20, 2, 1, "", "inference"], [20, 2, 1, "", "initTrainingStates"], [20, 2, 1, "", "processAfterTraining"]], "begin.algorithms.twp.nodes.NCTaskILTWPTrainer": [[20, 2, 1, "", "afterInference"], [20, 2, 1, "", "inference"], [20, 2, 1, "", "initTrainingStates"], [20, 2, 1, "", "processAfterTraining"]], "begin.evaluators": [[22, 1, 1, "", "AccuracyEvaluator"], [22, 1, 1, "", "BaseEvaluator"], [22, 1, 1, "", "HitsEvaluator"], [22, 1, 1, "", "ROCAUCEvaluator"]], "begin.evaluators.AccuracyEvaluator": [[22, 2, 1, "", "simple_eval"]], "begin.evaluators.BaseEvaluator": [[22, 2, 1, "", "simple_eval"]], "begin.evaluators.HitsEvaluator": [[22, 2, 1, "", "simple_eval"]], "begin.evaluators.ROCAUCEvaluator": [[22, 2, 1, "", "simple_eval"]], "begin.scenarios.common": [[5, 1, 1, "", "BaseScenarioLoader"]], "begin.scenarios.common.BaseScenarioLoader": [[5, 2, 1, "", "_init_continual_scenario"], [5, 2, 1, "", "_update_accumulated_dataset"], [5, 2, 1, "", "_update_target_dataset"], [5, 2, 1, "", "get_accumulated_dataset"], [5, 2, 1, "", "get_current_dataset"], [5, 2, 1, "", "next_task"]], "begin.scenarios": [[6, 0, 0, "-", "graphs"], [7, 0, 0, "-", "links"], [8, 0, 0, "-", "nodes"]], "begin.scenarios.graphs": [[6, 1, 1, "", "GCScenarioLoader"]], "begin.scenarios.graphs.GCScenarioLoader": [[6, 2, 1, "", "_get_eval_result_inner"], [6, 2, 1, "", "_init_continual_scenario"], [6, 2, 1, "", "_update_accumulated_dataset"], [6, 2, 1, "", "_update_target_dataset"], [6, 2, 1, "", "get_accum_eval_result"], [6, 2, 1, "", "get_simple_eval_result"], [6, 2, 1, "", "next_task"]], "begin.scenarios.links": [[7, 1, 1, "", "LCScenarioLoader"], [7, 1, 1, "", "LPScenarioLoader"]], "begin.scenarios.links.LCScenarioLoader": [[7, 2, 1, "", "_get_eval_result_inner"], [7, 2, 1, "", "_init_continual_scenario"], [7, 2, 1, "", "_update_accumulated_dataset"], [7, 2, 1, "", "_update_target_dataset"], [7, 2, 1, "", "get_accum_eval_result"], [7, 2, 1, "", "get_simple_eval_result"], [7, 2, 1, "", "next_task"]], "begin.scenarios.links.LPScenarioLoader": [[7, 2, 1, "", "_get_eval_result_inner"], [7, 2, 1, "", "_init_continual_scenario"], [7, 2, 1, "", "_update_accumulated_dataset"], [7, 2, 1, "", "_update_target_dataset"], [7, 2, 1, "", "get_accum_eval_result"], [7, 2, 1, "", "get_simple_eval_result"], [7, 2, 1, "", "next_task"]], "begin.scenarios.nodes": [[8, 1, 1, "", "NCScenarioLoader"], [8, 3, 1, "", "load_node_dataset"]], "begin.scenarios.nodes.NCScenarioLoader": [[8, 2, 1, "", "_get_eval_result_inner"], [8, 2, 1, "", "_init_continual_scenario"], [8, 2, 1, "", "_update_accumulated_dataset"], [8, 2, 1, "", "_update_target_dataset"], [8, 2, 1, "", "get_accum_eval_result"], [8, 2, 1, "", "get_simple_eval_result"], [8, 2, 1, "", "next_task"]], "begin.trainers": [[9, 0, 0, "-", "common"], [10, 0, 0, "-", "graphs"], [11, 0, 0, "-", "links"], [12, 0, 0, "-", "nodes"]], "begin.trainers.common": [[9, 1, 1, "", "BaseTrainer"]], "begin.trainers.common.BaseTrainer": [[9, 2, 1, "", "_evalWrapper"], [9, 2, 1, "", "_reduceEvalStats"], [9, 2, 1, "", "_reduceTrainingStats"], [9, 2, 1, "", "_reset_model"], [9, 2, 1, "", "_reset_optimizer"], [9, 2, 1, "", "_trainWrapper"], [9, 2, 1, "", "afterInference"], [9, 2, 1, "", "beforeInference"], [9, 4, 1, "", "curr_task"], [9, 4, 1, "", "incr_type"], [9, 2, 1, "", "inference"], [9, 2, 1, "", "initTrainingStates"], [9, 2, 1, "", "prepareLoader"], [9, 2, 1, "", "processAfterEachIteration"], [9, 2, 1, "", "processAfterTraining"], [9, 2, 1, "", "processBeforeTraining"], [9, 2, 1, "", "processEvalIteration"], [9, 2, 1, "", "processTrainIteration"], [9, 2, 1, "", "processTrainingLogs"], [9, 2, 1, "", "run"]], "begin.trainers.graphs": [[10, 1, 1, "", "GCTrainer"]], "begin.trainers.graphs.GCTrainer": [[10, 2, 1, "", "afterInference"], [10, 2, 1, "", "beforeInference"], [10, 2, 1, "", "inference"], [10, 2, 1, "", "initTrainingStates"], [10, 2, 1, "", "prepareLoader"], [10, 2, 1, "", "processAfterEachIteration"], [10, 2, 1, "", "processAfterTraining"], [10, 2, 1, "", "processBeforeTraining"], [10, 2, 1, "", "processEvalIteration"], [10, 2, 1, "", "processTrainIteration"], [10, 2, 1, "", "processTrainingLogs"], [10, 2, 1, "", "run"]], "begin.trainers.links": [[11, 1, 1, "", "LCTrainer"], [11, 1, 1, "", "LPTrainer"]], "begin.trainers.links.LCTrainer": [[11, 2, 1, "", "afterInference"], [11, 2, 1, "", "beforeInference"], [11, 2, 1, "", "inference"], [11, 2, 1, "", "initTrainingStates"], [11, 2, 1, "", "prepareLoader"], [11, 2, 1, "", "processAfterEachIteration"], [11, 2, 1, "", "processAfterTraining"], [11, 2, 1, "", "processBeforeTraining"], [11, 2, 1, "", "processEvalIteration"], [11, 2, 1, "", "processTrainIteration"], [11, 2, 1, "", "processTrainingLogs"], [11, 2, 1, "", "run"]], "begin.trainers.links.LPTrainer": [[11, 2, 1, "", "afterInference"], [11, 2, 1, "", "beforeInference"], [11, 2, 1, "", "inference"], [11, 2, 1, "", "initTrainingStates"], [11, 2, 1, "", "prepareLoader"], [11, 2, 1, "", "processAfterEachIteration"], [11, 2, 1, "", "processAfterTraining"], [11, 2, 1, "", "processBeforeTraining"], [11, 2, 1, "", "processEvalIteration"], [11, 2, 1, "", "processTrainIteration"], [11, 2, 1, "", "processTrainingLogs"], [11, 2, 1, "", "run"]], "begin.trainers.nodes": [[12, 1, 1, "", "NCMinibatchTrainer"], [12, 1, 1, "", "NCTrainer"]], "begin.trainers.nodes.NCMinibatchTrainer": [[12, 2, 1, "", "afterInference"], [12, 2, 1, "", "inference"], [12, 2, 1, "", "prepareLoader"], [12, 2, 1, "", "processTrainingLogs"]], "begin.trainers.nodes.NCTrainer": [[12, 2, 1, "", "afterInference"], [12, 2, 1, "", "beforeInference"], [12, 2, 1, "", "inference"], [12, 2, 1, "", "initTrainingStates"], [12, 2, 1, "", "prepareLoader"], [12, 2, 1, "", "processAfterEachIteration"], [12, 2, 1, "", "processAfterTraining"], [12, 2, 1, "", "processBeforeTraining"], [12, 2, 1, "", "processEvalIteration"], [12, 2, 1, "", "processTrainIteration"], [12, 2, 1, "", "processTrainingLogs"], [12, 2, 1, "", "run"]], "begin.utils": [[23, 1, 1, "", "AdaptiveLinear"]], "begin.utils.AdaptiveLinear": [[23, 2, 1, "", "forward"], [23, 2, 1, "", "get_output_mask"], [23, 2, 1, "", "observe_outputs"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function", "4": "py:property"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"], "4": ["py", "property", "Python property"]}, "titleterms": {"instal": 0, "setup": 0, "requir": 0, "tutori": [1, 24], "scenarioload": 1, "evalu": [1, 24], "metric": [1, 21, 22], "trainer": [1, 24], "step": 1, "1": 1, "extend": 1, "base": 1, "2": 1, "set": 1, "initi": 1, "state": 1, "algorithm": 1, "inittrainingst": 1, "3": 1, "store": 1, "previou": 1, "weight": 1, "fisher": 1, "matrix": 1, "processaftertrain": 1, "4": 1, "comput": 1, "penalti": 1, "term": 1, "perform": [1, 21, 22], "regular": 1, "processtrainiter": 1, "afterinfer": 1, "combin": 1, "dataset": [2, 3, 4, 24], "graph": [2, 6, 10, 13, 16, 17, 18, 19, 20], "level": [2, 3, 4, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], "problem": [2, 3, 4, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], "mnist": 2, "cifar10": 2, "aromat": 2, "ogbg": 2, "molhiv": 2, "nyc": 2, "taxi": 2, "link": [3, 7, 11, 13, 16, 17, 18, 19, 20], "bitcoin": 3, "otc": 3, "classif": [3, 8], "wiki": 3, "c": 3, "predict": 3, "ogbl": 3, "collab": 3, "node": [4, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20], "cora": 4, "cites": 4, "coraful": 4, "ogbn": 4, "product": 4, "protein": 4, "arxiv": 4, "common": [5, 9], "framework": [5, 9], "bare": 13, "model": 13, "continualgnn": 14, "er": 15, "gnn": 15, "ewc": 16, "gem": 17, "lwf": 18, "ma": 19, "twp": 20, "cl": 21, "averag": 21, "ap": 21, "forget": 21, "af": 21, "intransig": 21, "int": 21, "forward": 21, "transfer": 21, "fwt": 21, "basic": 22, "baseevalu": 22, "accuraci": 22, "rocauc": 22, "hit": 22, "k": 22, "adaptivelinear": 23, "welcom": 24, "begin": 24, "document": 24, "content": 24, "get": 24, "start": 24, "scenario": 24, "continu": 24, "learn": 24, "method": 24, "util": 24}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"Install and Setup": [[0, "install-and-setup"]], "Requirements": [[0, "requirements"]], "Installation": [[0, "installation"]], "Tutorial": [[1, "tutorial"]], "ScenarioLoader and Evaluation Metric": [[1, "scenarioloader-and-evaluation-metric"]], "Trainer": [[1, "trainer"], [24, null]], "Step 1. Extending the base": [[1, "step-1-extending-the-base"]], "Step 2. Setting initial states for the algorithm (initTrainingStates())": [[1, "step-2-setting-initial-states-for-the-algorithm-inittrainingstates"]], "Step 3. Storing previous weights and Fisher matrix (processAfterTraining())": [[1, "step-3-storing-previous-weights-and-fisher-matrix-processaftertraining"]], "Step 4. Computing penalty term and Performing regularization (processTrainIteration() and afterInference())": [[1, "step-4-computing-penalty-term-and-performing-regularization-processtrainiteration-and-afterinference"]], "Combining ScenarioLoader, Evaluator, Trainer": [[1, "combining-scenarioloader-evaluator-trainer"]], "Datasets for Graph-Level Problems": [[2, "datasets-for-graph-level-problems"]], "MNIST": [[2, "mnist"]], "CIFAR10": [[2, "cifar10"]], "Aromaticity": [[2, "aromaticity"]], "ogbg-molhiv": [[2, "ogbg-molhiv"]], "NYC-Taxi": [[2, "nyc-taxi"]], "Datasets for Link-Level Problems": [[3, "datasets-for-link-level-problems"]], "BitCoin-OTC (Link Classification)": [[3, "bitcoin-otc-link-classification"]], "Wiki-CS (Link Prediction)": [[3, "wiki-cs-link-prediction"]], "ogbl-collab (Link Prediction)": [[3, "ogbl-collab-link-prediction"]], "Datasets for Node-Level Problems": [[4, "datasets-for-node-level-problems"]], "Cora": [[4, "cora"]], "Citeseer": [[4, "citeseer"]], "CoraFull": [[4, "corafull"]], "ogbn-products": [[4, "ogbn-products"]], "ogbn-proteins": [[4, "ogbn-proteins"]], "ogbn-arxiv": [[4, "ogbn-arxiv"]], "Common framework": [[5, "common-framework"], [9, "common-framework"]], "Graph-level problems": [[6, "module-begin.scenarios.graphs"], [10, "module-begin.trainers.graphs"]], "Link-level problems": [[7, "module-begin.scenarios.links"], [11, "module-begin.trainers.links"]], "Node-level problems": [[8, "node-level-problems"], [12, "module-begin.trainers.nodes"]], "Classification": [[8, "module-begin.scenarios.nodes"]], "Bare Model": [[13, "bare-model"]], "Node-level Problems": [[13, "module-begin.algorithms.bare.nodes"], [14, "module-begin.algorithms.cgnn.nodes"], [15, "module-begin.algorithms.ergnn.nodes"], [16, "module-begin.algorithms.ewc.nodes"], [17, "module-begin.algorithms.gem.nodes"], [18, "module-begin.algorithms.lwf.nodes"], [19, "module-begin.algorithms.mas.nodes"], [20, "module-begin.algorithms.twp.nodes"]], "Link-level Problems": [[13, "module-begin.algorithms.bare.links"], [16, "module-begin.algorithms.ewc.links"], [17, "module-begin.algorithms.gem.links"], [18, "module-begin.algorithms.lwf.links"], [19, "module-begin.algorithms.mas.links"], [20, "module-begin.algorithms.twp.links"]], "Graph-level Problems": [[13, "module-begin.algorithms.bare.graphs"], [16, "module-begin.algorithms.ewc.graphs"], [17, "module-begin.algorithms.gem.graphs"], [18, "module-begin.algorithms.lwf.graphs"], [19, "module-begin.algorithms.mas.graphs"], [20, "module-begin.algorithms.twp.graphs"]], "ContinualGNN": [[14, "continualgnn"]], "ER-GNN": [[15, "er-gnn"]], "EWC": [[16, "ewc"]], "GEM": [[17, "gem"]], "LwF": [[18, "lwf"]], "MAS": [[19, "mas"]], "TWP": [[20, "twp"]], "Metrics for CL": [[21, "metrics-for-cl"]], "Average Performance (AP)": [[21, "average-performance-ap"]], "Average Forgetting (AF)": [[21, "average-forgetting-af"]], "Intransigence (INT)": [[21, "intransigence-int"]], "Forward Transfer (FWT)": [[21, "forward-transfer-fwt"]], "Basic Performance Metrics": [[22, "basic-performance-metrics"]], "BaseEvaluator": [[22, "baseevaluator"]], "Accuracy": [[22, "accuracy"]], "ROCAUC": [[22, "rocauc"]], "HITS@K": [[22, "hits-k"]], "AdaptiveLinear": [[23, "adaptivelinear"]], "Welcome to BeGin Tutorials and Documentation!": [[24, "welcome-to-begin-tutorials-and-documentation"]], "Contents": [[24, "contents"]], "Get Started": [[24, null]], "Datasets": [[24, null]], "Scenarios": [[24, null]], "Continual Learning Methods": [[24, null]], "Evaluator": [[24, null]], "Utils": [[24, null]]}, "indexentries": {"basescenarioloader (class in begin.scenarios.common)": [[5, "begin.scenarios.common.BaseScenarioLoader"]], "_init_continual_scenario() (basescenarioloader method)": [[5, "begin.scenarios.common.BaseScenarioLoader._init_continual_scenario"]], "_update_accumulated_dataset() (basescenarioloader method)": [[5, "begin.scenarios.common.BaseScenarioLoader._update_accumulated_dataset"]], "_update_target_dataset() (basescenarioloader method)": [[5, "begin.scenarios.common.BaseScenarioLoader._update_target_dataset"]], "get_accumulated_dataset() (basescenarioloader method)": [[5, "begin.scenarios.common.BaseScenarioLoader.get_accumulated_dataset"]], "get_current_dataset() (basescenarioloader method)": [[5, "begin.scenarios.common.BaseScenarioLoader.get_current_dataset"]], "next_task() (basescenarioloader method)": [[5, "begin.scenarios.common.BaseScenarioLoader.next_task"]], "gcscenarioloader (class in begin.scenarios.graphs)": [[6, "begin.scenarios.graphs.GCScenarioLoader"]], "_get_eval_result_inner() (gcscenarioloader method)": [[6, "begin.scenarios.graphs.GCScenarioLoader._get_eval_result_inner"]], "_init_continual_scenario() (gcscenarioloader method)": [[6, "begin.scenarios.graphs.GCScenarioLoader._init_continual_scenario"]], "_update_accumulated_dataset() (gcscenarioloader method)": [[6, "begin.scenarios.graphs.GCScenarioLoader._update_accumulated_dataset"]], "_update_target_dataset() (gcscenarioloader method)": [[6, "begin.scenarios.graphs.GCScenarioLoader._update_target_dataset"]], "begin.scenarios.graphs": [[6, "module-begin.scenarios.graphs"]], "get_accum_eval_result() (gcscenarioloader method)": [[6, "begin.scenarios.graphs.GCScenarioLoader.get_accum_eval_result"]], "get_simple_eval_result() (gcscenarioloader method)": [[6, "begin.scenarios.graphs.GCScenarioLoader.get_simple_eval_result"]], "module": [[6, "module-begin.scenarios.graphs"], [7, "module-begin.scenarios.links"], [8, "module-begin.scenarios.nodes"], [9, "module-begin.trainers.common"], [10, "module-begin.trainers.graphs"], [11, "module-begin.trainers.links"], [12, "module-begin.trainers.nodes"], [13, "module-begin.algorithms.bare.graphs"], [13, "module-begin.algorithms.bare.links"], [13, "module-begin.algorithms.bare.nodes"], [14, "module-begin.algorithms.cgnn.nodes"], [15, "module-begin.algorithms.ergnn.nodes"], [16, "module-begin.algorithms.ewc.graphs"], [16, "module-begin.algorithms.ewc.links"], [16, "module-begin.algorithms.ewc.nodes"], [17, "module-begin.algorithms.gem.graphs"], [17, "module-begin.algorithms.gem.links"], [17, "module-begin.algorithms.gem.nodes"], [18, "module-begin.algorithms.lwf.graphs"], [18, "module-begin.algorithms.lwf.links"], [18, "module-begin.algorithms.lwf.nodes"], [19, "module-begin.algorithms.mas.graphs"], [19, "module-begin.algorithms.mas.links"], [19, "module-begin.algorithms.mas.nodes"], [20, "module-begin.algorithms.twp.graphs"], [20, "module-begin.algorithms.twp.links"], [20, "module-begin.algorithms.twp.nodes"]], "next_task() (gcscenarioloader method)": [[6, "begin.scenarios.graphs.GCScenarioLoader.next_task"]], "lcscenarioloader (class in begin.scenarios.links)": [[7, "begin.scenarios.links.LCScenarioLoader"]], "lpscenarioloader (class in begin.scenarios.links)": [[7, "begin.scenarios.links.LPScenarioLoader"]], "_get_eval_result_inner() (lcscenarioloader method)": [[7, "begin.scenarios.links.LCScenarioLoader._get_eval_result_inner"]], "_get_eval_result_inner() (lpscenarioloader method)": [[7, "begin.scenarios.links.LPScenarioLoader._get_eval_result_inner"]], "_init_continual_scenario() (lcscenarioloader method)": [[7, "begin.scenarios.links.LCScenarioLoader._init_continual_scenario"]], "_init_continual_scenario() (lpscenarioloader method)": [[7, "begin.scenarios.links.LPScenarioLoader._init_continual_scenario"]], "_update_accumulated_dataset() (lcscenarioloader method)": [[7, "begin.scenarios.links.LCScenarioLoader._update_accumulated_dataset"]], "_update_accumulated_dataset() (lpscenarioloader method)": [[7, "begin.scenarios.links.LPScenarioLoader._update_accumulated_dataset"]], "_update_target_dataset() (lcscenarioloader method)": [[7, "begin.scenarios.links.LCScenarioLoader._update_target_dataset"]], "_update_target_dataset() (lpscenarioloader method)": [[7, "begin.scenarios.links.LPScenarioLoader._update_target_dataset"]], "begin.scenarios.links": [[7, "module-begin.scenarios.links"]], "get_accum_eval_result() (lcscenarioloader method)": [[7, "begin.scenarios.links.LCScenarioLoader.get_accum_eval_result"]], "get_accum_eval_result() (lpscenarioloader method)": [[7, "begin.scenarios.links.LPScenarioLoader.get_accum_eval_result"]], "get_simple_eval_result() (lcscenarioloader method)": [[7, "begin.scenarios.links.LCScenarioLoader.get_simple_eval_result"]], "get_simple_eval_result() (lpscenarioloader method)": [[7, "begin.scenarios.links.LPScenarioLoader.get_simple_eval_result"]], "next_task() (lcscenarioloader method)": [[7, "begin.scenarios.links.LCScenarioLoader.next_task"]], "next_task() (lpscenarioloader method)": [[7, "begin.scenarios.links.LPScenarioLoader.next_task"]], "ncscenarioloader (class in begin.scenarios.nodes)": [[8, "begin.scenarios.nodes.NCScenarioLoader"]], "_get_eval_result_inner() (ncscenarioloader method)": [[8, "begin.scenarios.nodes.NCScenarioLoader._get_eval_result_inner"]], "_init_continual_scenario() (ncscenarioloader method)": [[8, "begin.scenarios.nodes.NCScenarioLoader._init_continual_scenario"]], "_update_accumulated_dataset() (ncscenarioloader method)": [[8, "begin.scenarios.nodes.NCScenarioLoader._update_accumulated_dataset"]], "_update_target_dataset() (ncscenarioloader method)": [[8, "begin.scenarios.nodes.NCScenarioLoader._update_target_dataset"]], "begin.scenarios.nodes": [[8, "module-begin.scenarios.nodes"]], "get_accum_eval_result() (ncscenarioloader method)": [[8, "begin.scenarios.nodes.NCScenarioLoader.get_accum_eval_result"]], "get_simple_eval_result() (ncscenarioloader method)": [[8, "begin.scenarios.nodes.NCScenarioLoader.get_simple_eval_result"]], "load_node_dataset() (in module begin.scenarios.nodes)": [[8, "begin.scenarios.nodes.load_node_dataset"]], "next_task() (ncscenarioloader method)": [[8, "begin.scenarios.nodes.NCScenarioLoader.next_task"]], "basetrainer (class in begin.trainers.common)": [[9, "begin.trainers.common.BaseTrainer"]], "_evalwrapper() (basetrainer method)": [[9, "begin.trainers.common.BaseTrainer._evalWrapper"]], "_reduceevalstats() (basetrainer method)": [[9, "begin.trainers.common.BaseTrainer._reduceEvalStats"]], "_reducetrainingstats() (basetrainer method)": [[9, "begin.trainers.common.BaseTrainer._reduceTrainingStats"]], "_reset_model() (basetrainer method)": [[9, "begin.trainers.common.BaseTrainer._reset_model"]], "_reset_optimizer() (basetrainer method)": [[9, "begin.trainers.common.BaseTrainer._reset_optimizer"]], "_trainwrapper() (basetrainer method)": [[9, "begin.trainers.common.BaseTrainer._trainWrapper"]], "afterinference() (basetrainer method)": [[9, "begin.trainers.common.BaseTrainer.afterInference"]], "beforeinference() (basetrainer method)": [[9, "begin.trainers.common.BaseTrainer.beforeInference"]], "begin.trainers.common": [[9, "module-begin.trainers.common"]], "curr_task (basetrainer property)": [[9, "begin.trainers.common.BaseTrainer.curr_task"]], "incr_type (basetrainer property)": [[9, "begin.trainers.common.BaseTrainer.incr_type"]], "inference() (basetrainer method)": [[9, "begin.trainers.common.BaseTrainer.inference"]], "inittrainingstates() (basetrainer method)": [[9, "begin.trainers.common.BaseTrainer.initTrainingStates"]], "prepareloader() (basetrainer method)": [[9, "begin.trainers.common.BaseTrainer.prepareLoader"]], "processaftereachiteration() (basetrainer method)": [[9, "begin.trainers.common.BaseTrainer.processAfterEachIteration"]], "processaftertraining() (basetrainer method)": [[9, "begin.trainers.common.BaseTrainer.processAfterTraining"]], "processbeforetraining() (basetrainer method)": [[9, "begin.trainers.common.BaseTrainer.processBeforeTraining"]], "processevaliteration() (basetrainer method)": [[9, "begin.trainers.common.BaseTrainer.processEvalIteration"]], "processtrainiteration() (basetrainer method)": [[9, "begin.trainers.common.BaseTrainer.processTrainIteration"]], "processtraininglogs() (basetrainer method)": [[9, "begin.trainers.common.BaseTrainer.processTrainingLogs"]], "run() (basetrainer method)": [[9, "begin.trainers.common.BaseTrainer.run"]], "gctrainer (class in begin.trainers.graphs)": [[10, "begin.trainers.graphs.GCTrainer"]], "afterinference() (gctrainer method)": [[10, "begin.trainers.graphs.GCTrainer.afterInference"]], "beforeinference() (gctrainer method)": [[10, "begin.trainers.graphs.GCTrainer.beforeInference"]], "begin.trainers.graphs": [[10, "module-begin.trainers.graphs"]], "inference() (gctrainer method)": [[10, "begin.trainers.graphs.GCTrainer.inference"]], "inittrainingstates() (gctrainer method)": [[10, "begin.trainers.graphs.GCTrainer.initTrainingStates"]], "prepareloader() (gctrainer method)": [[10, "begin.trainers.graphs.GCTrainer.prepareLoader"]], "processaftereachiteration() (gctrainer method)": [[10, "begin.trainers.graphs.GCTrainer.processAfterEachIteration"]], "processaftertraining() (gctrainer method)": [[10, "begin.trainers.graphs.GCTrainer.processAfterTraining"]], "processbeforetraining() (gctrainer method)": [[10, "begin.trainers.graphs.GCTrainer.processBeforeTraining"]], "processevaliteration() (gctrainer method)": [[10, "begin.trainers.graphs.GCTrainer.processEvalIteration"]], "processtrainiteration() (gctrainer method)": [[10, "begin.trainers.graphs.GCTrainer.processTrainIteration"]], "processtraininglogs() (gctrainer method)": [[10, "begin.trainers.graphs.GCTrainer.processTrainingLogs"]], "run() (gctrainer method)": [[10, "begin.trainers.graphs.GCTrainer.run"]], "lctrainer (class in begin.trainers.links)": [[11, "begin.trainers.links.LCTrainer"]], "lptrainer (class in begin.trainers.links)": [[11, "begin.trainers.links.LPTrainer"]], "afterinference() (lctrainer method)": [[11, "begin.trainers.links.LCTrainer.afterInference"]], "afterinference() (lptrainer method)": [[11, "begin.trainers.links.LPTrainer.afterInference"]], "beforeinference() (lctrainer method)": [[11, "begin.trainers.links.LCTrainer.beforeInference"]], "beforeinference() (lptrainer method)": [[11, "begin.trainers.links.LPTrainer.beforeInference"]], "begin.trainers.links": [[11, "module-begin.trainers.links"]], "inference() (lctrainer method)": [[11, "begin.trainers.links.LCTrainer.inference"]], "inference() (lptrainer method)": [[11, "begin.trainers.links.LPTrainer.inference"]], "inittrainingstates() (lctrainer method)": [[11, "begin.trainers.links.LCTrainer.initTrainingStates"]], "inittrainingstates() (lptrainer method)": [[11, "begin.trainers.links.LPTrainer.initTrainingStates"]], "prepareloader() (lctrainer method)": [[11, "begin.trainers.links.LCTrainer.prepareLoader"]], "prepareloader() (lptrainer method)": [[11, "begin.trainers.links.LPTrainer.prepareLoader"]], "processaftereachiteration() (lctrainer method)": [[11, "begin.trainers.links.LCTrainer.processAfterEachIteration"]], "processaftereachiteration() (lptrainer method)": [[11, "begin.trainers.links.LPTrainer.processAfterEachIteration"]], "processaftertraining() (lctrainer method)": [[11, "begin.trainers.links.LCTrainer.processAfterTraining"]], "processaftertraining() (lptrainer method)": [[11, "begin.trainers.links.LPTrainer.processAfterTraining"]], "processbeforetraining() (lctrainer method)": [[11, "begin.trainers.links.LCTrainer.processBeforeTraining"]], "processbeforetraining() (lptrainer method)": [[11, "begin.trainers.links.LPTrainer.processBeforeTraining"]], "processevaliteration() (lctrainer method)": [[11, "begin.trainers.links.LCTrainer.processEvalIteration"]], "processevaliteration() (lptrainer method)": [[11, "begin.trainers.links.LPTrainer.processEvalIteration"]], "processtrainiteration() (lctrainer method)": [[11, "begin.trainers.links.LCTrainer.processTrainIteration"]], "processtrainiteration() (lptrainer method)": [[11, "begin.trainers.links.LPTrainer.processTrainIteration"]], "processtraininglogs() (lctrainer method)": [[11, "begin.trainers.links.LCTrainer.processTrainingLogs"]], "processtraininglogs() (lptrainer method)": [[11, "begin.trainers.links.LPTrainer.processTrainingLogs"]], "run() (lctrainer method)": [[11, "begin.trainers.links.LCTrainer.run"]], "run() (lptrainer method)": [[11, "begin.trainers.links.LPTrainer.run"]], "ncminibatchtrainer (class in begin.trainers.nodes)": [[12, "begin.trainers.nodes.NCMinibatchTrainer"]], "nctrainer (class in begin.trainers.nodes)": [[12, "begin.trainers.nodes.NCTrainer"]], "afterinference() (ncminibatchtrainer method)": [[12, "begin.trainers.nodes.NCMinibatchTrainer.afterInference"]], "afterinference() (nctrainer method)": [[12, "begin.trainers.nodes.NCTrainer.afterInference"]], "beforeinference() (nctrainer method)": [[12, "begin.trainers.nodes.NCTrainer.beforeInference"]], "begin.trainers.nodes": [[12, "module-begin.trainers.nodes"]], "inference() (ncminibatchtrainer method)": [[12, "begin.trainers.nodes.NCMinibatchTrainer.inference"]], "inference() (nctrainer method)": [[12, "begin.trainers.nodes.NCTrainer.inference"]], "inittrainingstates() (nctrainer method)": [[12, "begin.trainers.nodes.NCTrainer.initTrainingStates"]], "prepareloader() (ncminibatchtrainer method)": [[12, "begin.trainers.nodes.NCMinibatchTrainer.prepareLoader"]], "prepareloader() (nctrainer method)": [[12, "begin.trainers.nodes.NCTrainer.prepareLoader"]], "processaftereachiteration() (nctrainer method)": [[12, "begin.trainers.nodes.NCTrainer.processAfterEachIteration"]], "processaftertraining() (nctrainer method)": [[12, "begin.trainers.nodes.NCTrainer.processAfterTraining"]], "processbeforetraining() (nctrainer method)": [[12, "begin.trainers.nodes.NCTrainer.processBeforeTraining"]], "processevaliteration() (nctrainer method)": [[12, "begin.trainers.nodes.NCTrainer.processEvalIteration"]], "processtrainiteration() (nctrainer method)": [[12, "begin.trainers.nodes.NCTrainer.processTrainIteration"]], "processtraininglogs() (ncminibatchtrainer method)": [[12, "begin.trainers.nodes.NCMinibatchTrainer.processTrainingLogs"]], "processtraininglogs() (nctrainer method)": [[12, "begin.trainers.nodes.NCTrainer.processTrainingLogs"]], "run() (nctrainer method)": [[12, "begin.trainers.nodes.NCTrainer.run"]], "gcclassilbaretrainer (class in begin.algorithms.bare.graphs)": [[13, "begin.algorithms.bare.graphs.GCClassILBareTrainer"]], "gcdomainilbaretrainer (class in begin.algorithms.bare.graphs)": [[13, "begin.algorithms.bare.graphs.GCDomainILBareTrainer"]], "gctaskilbaretrainer (class in begin.algorithms.bare.graphs)": [[13, "begin.algorithms.bare.graphs.GCTaskILBareTrainer"]], "gctimeilbaretrainer (class in begin.algorithms.bare.graphs)": [[13, "begin.algorithms.bare.graphs.GCTimeILBareTrainer"]], "lcclassilbaretrainer (class in begin.algorithms.bare.links)": [[13, "begin.algorithms.bare.links.LCClassILBareTrainer"]], "lctaskilbaretrainer (class in begin.algorithms.bare.links)": [[13, "begin.algorithms.bare.links.LCTaskILBareTrainer"]], "lctimeilbaretrainer (class in begin.algorithms.bare.links)": [[13, "begin.algorithms.bare.links.LCTimeILBareTrainer"]], "lpdomainilbaretrainer (class in begin.algorithms.bare.links)": [[13, "begin.algorithms.bare.links.LPDomainILBareTrainer"]], "lptimeilbaretrainer (class in begin.algorithms.bare.links)": [[13, "begin.algorithms.bare.links.LPTimeILBareTrainer"]], "ncclassilbareminibatchtrainer (class in begin.algorithms.bare.nodes)": [[13, "begin.algorithms.bare.nodes.NCClassILBareMinibatchTrainer"]], "ncclassilbaretrainer (class in begin.algorithms.bare.nodes)": [[13, "begin.algorithms.bare.nodes.NCClassILBareTrainer"]], "ncdomainilbaretrainer (class in begin.algorithms.bare.nodes)": [[13, "begin.algorithms.bare.nodes.NCDomainILBareTrainer"]], "nctaskilbaretrainer (class in begin.algorithms.bare.nodes)": [[13, "begin.algorithms.bare.nodes.NCTaskILBareTrainer"]], "nctimeilbaretrainer (class in begin.algorithms.bare.nodes)": [[13, "begin.algorithms.bare.nodes.NCTimeILBareTrainer"]], "afterinference() (lctimeilbaretrainer method)": [[13, "begin.algorithms.bare.links.LCTimeILBareTrainer.afterInference"]], "begin.algorithms.bare.graphs": [[13, "module-begin.algorithms.bare.graphs"]], "begin.algorithms.bare.links": [[13, "module-begin.algorithms.bare.links"]], "begin.algorithms.bare.nodes": [[13, "module-begin.algorithms.bare.nodes"]], "inference() (gctaskilbaretrainer method)": [[13, "begin.algorithms.bare.graphs.GCTaskILBareTrainer.inference"]], "inference() (lctaskilbaretrainer method)": [[13, "begin.algorithms.bare.links.LCTaskILBareTrainer.inference"]], "inference() (nctaskilbaretrainer method)": [[13, "begin.algorithms.bare.nodes.NCTaskILBareTrainer.inference"]], "prepareloader() (lctaskilbaretrainer method)": [[13, "begin.algorithms.bare.links.LCTaskILBareTrainer.prepareLoader"]], "processbeforetraining() (gcdomainilbaretrainer method)": [[13, "begin.algorithms.bare.graphs.GCDomainILBareTrainer.processBeforeTraining"]], "processbeforetraining() (lctimeilbaretrainer method)": [[13, "begin.algorithms.bare.links.LCTimeILBareTrainer.processBeforeTraining"]], "processbeforetraining() (ncdomainilbaretrainer method)": [[13, "begin.algorithms.bare.nodes.NCDomainILBareTrainer.processBeforeTraining"]], "processevaliteration() (gcdomainilbaretrainer method)": [[13, "begin.algorithms.bare.graphs.GCDomainILBareTrainer.processEvalIteration"]], "processevaliteration() (lctimeilbaretrainer method)": [[13, "begin.algorithms.bare.links.LCTimeILBareTrainer.processEvalIteration"]], "processevaliteration() (ncdomainilbaretrainer method)": [[13, "begin.algorithms.bare.nodes.NCDomainILBareTrainer.processEvalIteration"]], "processtrainiteration() (gcdomainilbaretrainer method)": [[13, "begin.algorithms.bare.graphs.GCDomainILBareTrainer.processTrainIteration"]], "processtrainiteration() (ncdomainilbaretrainer method)": [[13, "begin.algorithms.bare.nodes.NCDomainILBareTrainer.processTrainIteration"]], "ncclassilcgnntrainer (class in begin.algorithms.cgnn.nodes)": [[14, "begin.algorithms.cgnn.nodes.NCClassILCGNNTrainer"]], "ncdomainilcgnntrainer (class in begin.algorithms.cgnn.nodes)": [[14, "begin.algorithms.cgnn.nodes.NCDomainILCGNNTrainer"]], "nctaskilcgnntrainer (class in begin.algorithms.cgnn.nodes)": [[14, "begin.algorithms.cgnn.nodes.NCTaskILCGNNTrainer"]], "nctimeilcgnntrainer (class in begin.algorithms.cgnn.nodes)": [[14, "begin.algorithms.cgnn.nodes.NCTimeILCGNNTrainer"]], "begin.algorithms.cgnn.nodes": [[14, "module-begin.algorithms.cgnn.nodes"]], "inittrainingstates() (ncclassilcgnntrainer method)": [[14, "begin.algorithms.cgnn.nodes.NCClassILCGNNTrainer.initTrainingStates"]], "inittrainingstates() (nctaskilcgnntrainer method)": [[14, "begin.algorithms.cgnn.nodes.NCTaskILCGNNTrainer.initTrainingStates"]], "prepareloader() (ncclassilcgnntrainer method)": [[14, "begin.algorithms.cgnn.nodes.NCClassILCGNNTrainer.prepareLoader"]], "prepareloader() (nctaskilcgnntrainer method)": [[14, "begin.algorithms.cgnn.nodes.NCTaskILCGNNTrainer.prepareLoader"]], "processaftereachiteration() (ncclassilcgnntrainer method)": [[14, "begin.algorithms.cgnn.nodes.NCClassILCGNNTrainer.processAfterEachIteration"]], "processaftereachiteration() (nctaskilcgnntrainer method)": [[14, "begin.algorithms.cgnn.nodes.NCTaskILCGNNTrainer.processAfterEachIteration"]], "processaftertraining() (ncclassilcgnntrainer method)": [[14, "begin.algorithms.cgnn.nodes.NCClassILCGNNTrainer.processAfterTraining"]], "processaftertraining() (nctaskilcgnntrainer method)": [[14, "begin.algorithms.cgnn.nodes.NCTaskILCGNNTrainer.processAfterTraining"]], "processbeforetraining() (ncclassilcgnntrainer method)": [[14, "begin.algorithms.cgnn.nodes.NCClassILCGNNTrainer.processBeforeTraining"]], "processbeforetraining() (nctaskilcgnntrainer method)": [[14, "begin.algorithms.cgnn.nodes.NCTaskILCGNNTrainer.processBeforeTraining"]], "processevaliteration() (nctaskilcgnntrainer method)": [[14, "begin.algorithms.cgnn.nodes.NCTaskILCGNNTrainer.processEvalIteration"]], "processtrainiteration() (ncclassilcgnntrainer method)": [[14, "begin.algorithms.cgnn.nodes.NCClassILCGNNTrainer.processTrainIteration"]], "processtrainiteration() (nctaskilcgnntrainer method)": [[14, "begin.algorithms.cgnn.nodes.NCTaskILCGNNTrainer.processTrainIteration"]], "ncclassilergnnminibatchtrainer (class in begin.algorithms.ergnn.nodes)": [[15, "begin.algorithms.ergnn.nodes.NCClassILERGNNMinibatchTrainer"]], "ncclassilergnntrainer (class in begin.algorithms.ergnn.nodes)": [[15, "begin.algorithms.ergnn.nodes.NCClassILERGNNTrainer"]], "ncdomainilergnntrainer (class in begin.algorithms.ergnn.nodes)": [[15, "begin.algorithms.ergnn.nodes.NCDomainILERGNNTrainer"]], "nctaskilergnntrainer (class in begin.algorithms.ergnn.nodes)": [[15, "begin.algorithms.ergnn.nodes.NCTaskILERGNNTrainer"]], "nctimeilergnntrainer (class in begin.algorithms.ergnn.nodes)": [[15, "begin.algorithms.ergnn.nodes.NCTimeILERGNNTrainer"]], "afterinference() (ncclassilergnnminibatchtrainer method)": [[15, "begin.algorithms.ergnn.nodes.NCClassILERGNNMinibatchTrainer.afterInference"]], "afterinference() (ncclassilergnntrainer method)": [[15, "begin.algorithms.ergnn.nodes.NCClassILERGNNTrainer.afterInference"]], "afterinference() (nctaskilergnntrainer method)": [[15, "begin.algorithms.ergnn.nodes.NCTaskILERGNNTrainer.afterInference"]], "begin.algorithms.ergnn.nodes": [[15, "module-begin.algorithms.ergnn.nodes"]], "inference() (ncclassilergnnminibatchtrainer method)": [[15, "begin.algorithms.ergnn.nodes.NCClassILERGNNMinibatchTrainer.inference"]], "inference() (ncclassilergnntrainer method)": [[15, "begin.algorithms.ergnn.nodes.NCClassILERGNNTrainer.inference"]], "inference() (nctaskilergnntrainer method)": [[15, "begin.algorithms.ergnn.nodes.NCTaskILERGNNTrainer.inference"]], "inittrainingstates() (ncclassilergnnminibatchtrainer method)": [[15, "begin.algorithms.ergnn.nodes.NCClassILERGNNMinibatchTrainer.initTrainingStates"]], "inittrainingstates() (ncclassilergnntrainer method)": [[15, "begin.algorithms.ergnn.nodes.NCClassILERGNNTrainer.initTrainingStates"]], "inittrainingstates() (nctaskilergnntrainer method)": [[15, "begin.algorithms.ergnn.nodes.NCTaskILERGNNTrainer.initTrainingStates"]], "inittrainingstates() (nctimeilergnntrainer method)": [[15, "begin.algorithms.ergnn.nodes.NCTimeILERGNNTrainer.initTrainingStates"]], "processaftertraining() (ncclassilergnnminibatchtrainer method)": [[15, "begin.algorithms.ergnn.nodes.NCClassILERGNNMinibatchTrainer.processAfterTraining"]], "processaftertraining() (ncclassilergnntrainer method)": [[15, "begin.algorithms.ergnn.nodes.NCClassILERGNNTrainer.processAfterTraining"]], "processaftertraining() (nctaskilergnntrainer method)": [[15, "begin.algorithms.ergnn.nodes.NCTaskILERGNNTrainer.processAfterTraining"]], "processaftertraining() (nctimeilergnntrainer method)": [[15, "begin.algorithms.ergnn.nodes.NCTimeILERGNNTrainer.processAfterTraining"]], "processbeforetraining() (ncclassilergnnminibatchtrainer method)": [[15, "begin.algorithms.ergnn.nodes.NCClassILERGNNMinibatchTrainer.processBeforeTraining"]], "processtrainiteration() (nctimeilergnntrainer method)": [[15, "begin.algorithms.ergnn.nodes.NCTimeILERGNNTrainer.processTrainIteration"]], "gcclassilewctrainer (class in begin.algorithms.ewc.graphs)": [[16, "begin.algorithms.ewc.graphs.GCClassILEWCTrainer"]], "gcdomainilewctrainer (class in begin.algorithms.ewc.graphs)": [[16, "begin.algorithms.ewc.graphs.GCDomainILEWCTrainer"]], "gctaskilewctrainer (class in begin.algorithms.ewc.graphs)": [[16, "begin.algorithms.ewc.graphs.GCTaskILEWCTrainer"]], "gctimeilewctrainer (class in begin.algorithms.ewc.graphs)": [[16, "begin.algorithms.ewc.graphs.GCTimeILEWCTrainer"]], "lcclassilewctrainer (class in begin.algorithms.ewc.links)": [[16, "begin.algorithms.ewc.links.LCClassILEWCTrainer"]], "lctaskilewctrainer (class in begin.algorithms.ewc.links)": [[16, "begin.algorithms.ewc.links.LCTaskILEWCTrainer"]], "lctimeilewctrainer (class in begin.algorithms.ewc.links)": [[16, "begin.algorithms.ewc.links.LCTimeILEWCTrainer"]], "lpdomainilewctrainer (class in begin.algorithms.ewc.links)": [[16, "begin.algorithms.ewc.links.LPDomainILEWCTrainer"]], "lptimeilewctrainer (class in begin.algorithms.ewc.links)": [[16, "begin.algorithms.ewc.links.LPTimeILEWCTrainer"]], "ncclassilewcminibatchtrainer (class in begin.algorithms.ewc.nodes)": [[16, "begin.algorithms.ewc.nodes.NCClassILEWCMinibatchTrainer"]], "ncclassilewctrainer (class in begin.algorithms.ewc.nodes)": [[16, "begin.algorithms.ewc.nodes.NCClassILEWCTrainer"]], "ncdomainilewctrainer (class in begin.algorithms.ewc.nodes)": [[16, "begin.algorithms.ewc.nodes.NCDomainILEWCTrainer"]], "nctaskilewctrainer (class in begin.algorithms.ewc.nodes)": [[16, "begin.algorithms.ewc.nodes.NCTaskILEWCTrainer"]], "nctimeilewctrainer (class in begin.algorithms.ewc.nodes)": [[16, "begin.algorithms.ewc.nodes.NCTimeILEWCTrainer"]], "afterinference() (gcclassilewctrainer method)": [[16, "begin.algorithms.ewc.graphs.GCClassILEWCTrainer.afterInference"]], "afterinference() (gctaskilewctrainer method)": [[16, "begin.algorithms.ewc.graphs.GCTaskILEWCTrainer.afterInference"]], "afterinference() (lcclassilewctrainer method)": [[16, "begin.algorithms.ewc.links.LCClassILEWCTrainer.afterInference"]], "afterinference() (lctaskilewctrainer method)": [[16, "begin.algorithms.ewc.links.LCTaskILEWCTrainer.afterInference"]], "afterinference() (lctimeilewctrainer method)": [[16, "begin.algorithms.ewc.links.LCTimeILEWCTrainer.afterInference"]], "afterinference() (ncclassilewcminibatchtrainer method)": [[16, "begin.algorithms.ewc.nodes.NCClassILEWCMinibatchTrainer.afterInference"]], "afterinference() (ncclassilewctrainer method)": [[16, "begin.algorithms.ewc.nodes.NCClassILEWCTrainer.afterInference"]], "afterinference() (nctaskilewctrainer method)": [[16, "begin.algorithms.ewc.nodes.NCTaskILEWCTrainer.afterInference"]], "begin.algorithms.ewc.graphs": [[16, "module-begin.algorithms.ewc.graphs"]], "begin.algorithms.ewc.links": [[16, "module-begin.algorithms.ewc.links"]], "begin.algorithms.ewc.nodes": [[16, "module-begin.algorithms.ewc.nodes"]], "inference() (gctaskilewctrainer method)": [[16, "begin.algorithms.ewc.graphs.GCTaskILEWCTrainer.inference"]], "inference() (lctaskilewctrainer method)": [[16, "begin.algorithms.ewc.links.LCTaskILEWCTrainer.inference"]], "inference() (nctaskilewctrainer method)": [[16, "begin.algorithms.ewc.nodes.NCTaskILEWCTrainer.inference"]], "inittrainingstates() (gcclassilewctrainer method)": [[16, "begin.algorithms.ewc.graphs.GCClassILEWCTrainer.initTrainingStates"]], "inittrainingstates() (gcdomainilewctrainer method)": [[16, "begin.algorithms.ewc.graphs.GCDomainILEWCTrainer.initTrainingStates"]], "inittrainingstates() (gctaskilewctrainer method)": [[16, "begin.algorithms.ewc.graphs.GCTaskILEWCTrainer.initTrainingStates"]], "inittrainingstates() (lcclassilewctrainer method)": [[16, "begin.algorithms.ewc.links.LCClassILEWCTrainer.initTrainingStates"]], "inittrainingstates() (lctaskilewctrainer method)": [[16, "begin.algorithms.ewc.links.LCTaskILEWCTrainer.initTrainingStates"]], "inittrainingstates() (lctimeilewctrainer method)": [[16, "begin.algorithms.ewc.links.LCTimeILEWCTrainer.initTrainingStates"]], "inittrainingstates() (lptimeilewctrainer method)": [[16, "begin.algorithms.ewc.links.LPTimeILEWCTrainer.initTrainingStates"]], "inittrainingstates() (ncclassilewcminibatchtrainer method)": [[16, "begin.algorithms.ewc.nodes.NCClassILEWCMinibatchTrainer.initTrainingStates"]], "inittrainingstates() (ncclassilewctrainer method)": [[16, "begin.algorithms.ewc.nodes.NCClassILEWCTrainer.initTrainingStates"]], "inittrainingstates() (ncdomainilewctrainer method)": [[16, "begin.algorithms.ewc.nodes.NCDomainILEWCTrainer.initTrainingStates"]], "inittrainingstates() (nctaskilewctrainer method)": [[16, "begin.algorithms.ewc.nodes.NCTaskILEWCTrainer.initTrainingStates"]], "prepareloader() (lctaskilewctrainer method)": [[16, "begin.algorithms.ewc.links.LCTaskILEWCTrainer.prepareLoader"]], "processaftertraining() (gcclassilewctrainer method)": [[16, "begin.algorithms.ewc.graphs.GCClassILEWCTrainer.processAfterTraining"]], "processaftertraining() (gcdomainilewctrainer method)": [[16, "begin.algorithms.ewc.graphs.GCDomainILEWCTrainer.processAfterTraining"]], "processaftertraining() (gctaskilewctrainer method)": [[16, "begin.algorithms.ewc.graphs.GCTaskILEWCTrainer.processAfterTraining"]], "processaftertraining() (lcclassilewctrainer method)": [[16, "begin.algorithms.ewc.links.LCClassILEWCTrainer.processAfterTraining"]], "processaftertraining() (lctaskilewctrainer method)": [[16, "begin.algorithms.ewc.links.LCTaskILEWCTrainer.processAfterTraining"]], "processaftertraining() (lctimeilewctrainer method)": [[16, "begin.algorithms.ewc.links.LCTimeILEWCTrainer.processAfterTraining"]], "processaftertraining() (lptimeilewctrainer method)": [[16, "begin.algorithms.ewc.links.LPTimeILEWCTrainer.processAfterTraining"]], "processaftertraining() (ncclassilewcminibatchtrainer method)": [[16, "begin.algorithms.ewc.nodes.NCClassILEWCMinibatchTrainer.processAfterTraining"]], "processaftertraining() (ncclassilewctrainer method)": [[16, "begin.algorithms.ewc.nodes.NCClassILEWCTrainer.processAfterTraining"]], "processaftertraining() (ncdomainilewctrainer method)": [[16, "begin.algorithms.ewc.nodes.NCDomainILEWCTrainer.processAfterTraining"]], "processaftertraining() (nctaskilewctrainer method)": [[16, "begin.algorithms.ewc.nodes.NCTaskILEWCTrainer.processAfterTraining"]], "processbeforetraining() (gcdomainilewctrainer method)": [[16, "begin.algorithms.ewc.graphs.GCDomainILEWCTrainer.processBeforeTraining"]], "processbeforetraining() (lctimeilewctrainer method)": [[16, "begin.algorithms.ewc.links.LCTimeILEWCTrainer.processBeforeTraining"]], "processbeforetraining() (ncdomainilewctrainer method)": [[16, "begin.algorithms.ewc.nodes.NCDomainILEWCTrainer.processBeforeTraining"]], "processevaliteration() (gcdomainilewctrainer method)": [[16, "begin.algorithms.ewc.graphs.GCDomainILEWCTrainer.processEvalIteration"]], "processevaliteration() (lctimeilewctrainer method)": [[16, "begin.algorithms.ewc.links.LCTimeILEWCTrainer.processEvalIteration"]], "processevaliteration() (ncdomainilewctrainer method)": [[16, "begin.algorithms.ewc.nodes.NCDomainILEWCTrainer.processEvalIteration"]], "processtrainiteration() (gcdomainilewctrainer method)": [[16, "begin.algorithms.ewc.graphs.GCDomainILEWCTrainer.processTrainIteration"]], "processtrainiteration() (lptimeilewctrainer method)": [[16, "begin.algorithms.ewc.links.LPTimeILEWCTrainer.processTrainIteration"]], "processtrainiteration() (ncdomainilewctrainer method)": [[16, "begin.algorithms.ewc.nodes.NCDomainILEWCTrainer.processTrainIteration"]], "gcclassilgemtrainer (class in begin.algorithms.gem.graphs)": [[17, "begin.algorithms.gem.graphs.GCClassILGEMTrainer"]], "gcdomainilgemtrainer (class in begin.algorithms.gem.graphs)": [[17, "begin.algorithms.gem.graphs.GCDomainILGEMTrainer"]], "gctaskilgemtrainer (class in begin.algorithms.gem.graphs)": [[17, "begin.algorithms.gem.graphs.GCTaskILGEMTrainer"]], "gctimeilgemtrainer (class in begin.algorithms.gem.graphs)": [[17, "begin.algorithms.gem.graphs.GCTimeILGEMTrainer"]], "lcclassilgemtrainer (class in begin.algorithms.gem.links)": [[17, "begin.algorithms.gem.links.LCClassILGEMTrainer"]], "lctaskilgemtrainer (class in begin.algorithms.gem.links)": [[17, "begin.algorithms.gem.links.LCTaskILGEMTrainer"]], "lctimeilgemtrainer (class in begin.algorithms.gem.links)": [[17, "begin.algorithms.gem.links.LCTimeILGEMTrainer"]], "lpdomainilgemtrainer (class in begin.algorithms.gem.links)": [[17, "begin.algorithms.gem.links.LPDomainILGEMTrainer"]], "lptimeilgemtrainer (class in begin.algorithms.gem.links)": [[17, "begin.algorithms.gem.links.LPTimeILGEMTrainer"]], "ncclassilgemminibatchtrainer (class in begin.algorithms.gem.nodes)": [[17, "begin.algorithms.gem.nodes.NCClassILGEMMinibatchTrainer"]], "ncclassilgemtrainer (class in begin.algorithms.gem.nodes)": [[17, "begin.algorithms.gem.nodes.NCClassILGEMTrainer"]], "ncdomainilgemtrainer (class in begin.algorithms.gem.nodes)": [[17, "begin.algorithms.gem.nodes.NCDomainILGEMTrainer"]], "nctaskilgemtrainer (class in begin.algorithms.gem.nodes)": [[17, "begin.algorithms.gem.nodes.NCTaskILGEMTrainer"]], "nctimeilgemtrainer (class in begin.algorithms.gem.nodes)": [[17, "begin.algorithms.gem.nodes.NCTimeILGEMTrainer"]], "afterinference() (gcclassilgemtrainer method)": [[17, "begin.algorithms.gem.graphs.GCClassILGEMTrainer.afterInference"]], "afterinference() (gctaskilgemtrainer method)": [[17, "begin.algorithms.gem.graphs.GCTaskILGEMTrainer.afterInference"]], "afterinference() (lcclassilgemtrainer method)": [[17, "begin.algorithms.gem.links.LCClassILGEMTrainer.afterInference"]], "afterinference() (lctaskilgemtrainer method)": [[17, "begin.algorithms.gem.links.LCTaskILGEMTrainer.afterInference"]], "afterinference() (lctimeilgemtrainer method)": [[17, "begin.algorithms.gem.links.LCTimeILGEMTrainer.afterInference"]], "afterinference() (ncclassilgemminibatchtrainer method)": [[17, "begin.algorithms.gem.nodes.NCClassILGEMMinibatchTrainer.afterInference"]], "afterinference() (ncclassilgemtrainer method)": [[17, "begin.algorithms.gem.nodes.NCClassILGEMTrainer.afterInference"]], "afterinference() (nctaskilgemtrainer method)": [[17, "begin.algorithms.gem.nodes.NCTaskILGEMTrainer.afterInference"]], "beforeinference() (gcclassilgemtrainer method)": [[17, "begin.algorithms.gem.graphs.GCClassILGEMTrainer.beforeInference"]], "beforeinference() (gctaskilgemtrainer method)": [[17, "begin.algorithms.gem.graphs.GCTaskILGEMTrainer.beforeInference"]], "beforeinference() (lcclassilgemtrainer method)": [[17, "begin.algorithms.gem.links.LCClassILGEMTrainer.beforeInference"]], "beforeinference() (lctaskilgemtrainer method)": [[17, "begin.algorithms.gem.links.LCTaskILGEMTrainer.beforeInference"]], "beforeinference() (lctimeilgemtrainer method)": [[17, "begin.algorithms.gem.links.LCTimeILGEMTrainer.beforeInference"]], "beforeinference() (ncclassilgemminibatchtrainer method)": [[17, "begin.algorithms.gem.nodes.NCClassILGEMMinibatchTrainer.beforeInference"]], "beforeinference() (ncclassilgemtrainer method)": [[17, "begin.algorithms.gem.nodes.NCClassILGEMTrainer.beforeInference"]], "beforeinference() (nctaskilgemtrainer method)": [[17, "begin.algorithms.gem.nodes.NCTaskILGEMTrainer.beforeInference"]], "begin.algorithms.gem.graphs": [[17, "module-begin.algorithms.gem.graphs"]], "begin.algorithms.gem.links": [[17, "module-begin.algorithms.gem.links"]], "begin.algorithms.gem.nodes": [[17, "module-begin.algorithms.gem.nodes"]], "inference() (gctaskilgemtrainer method)": [[17, "begin.algorithms.gem.graphs.GCTaskILGEMTrainer.inference"]], "inference() (lctaskilgemtrainer method)": [[17, "begin.algorithms.gem.links.LCTaskILGEMTrainer.inference"]], "inference() (nctaskilgemtrainer method)": [[17, "begin.algorithms.gem.nodes.NCTaskILGEMTrainer.inference"]], "inittrainingstates() (gcclassilgemtrainer method)": [[17, "begin.algorithms.gem.graphs.GCClassILGEMTrainer.initTrainingStates"]], "inittrainingstates() (gcdomainilgemtrainer method)": [[17, "begin.algorithms.gem.graphs.GCDomainILGEMTrainer.initTrainingStates"]], "inittrainingstates() (gctaskilgemtrainer method)": [[17, "begin.algorithms.gem.graphs.GCTaskILGEMTrainer.initTrainingStates"]], "inittrainingstates() (lcclassilgemtrainer method)": [[17, "begin.algorithms.gem.links.LCClassILGEMTrainer.initTrainingStates"]], "inittrainingstates() (lctaskilgemtrainer method)": [[17, "begin.algorithms.gem.links.LCTaskILGEMTrainer.initTrainingStates"]], "inittrainingstates() (lctimeilgemtrainer method)": [[17, "begin.algorithms.gem.links.LCTimeILGEMTrainer.initTrainingStates"]], "inittrainingstates() (lptimeilgemtrainer method)": [[17, "begin.algorithms.gem.links.LPTimeILGEMTrainer.initTrainingStates"]], "inittrainingstates() (ncclassilgemminibatchtrainer method)": [[17, "begin.algorithms.gem.nodes.NCClassILGEMMinibatchTrainer.initTrainingStates"]], "inittrainingstates() (ncclassilgemtrainer method)": [[17, "begin.algorithms.gem.nodes.NCClassILGEMTrainer.initTrainingStates"]], "inittrainingstates() (ncdomainilgemtrainer method)": [[17, "begin.algorithms.gem.nodes.NCDomainILGEMTrainer.initTrainingStates"]], "inittrainingstates() (nctaskilgemtrainer method)": [[17, "begin.algorithms.gem.nodes.NCTaskILGEMTrainer.initTrainingStates"]], "prepareloader() (lctaskilgemtrainer method)": [[17, "begin.algorithms.gem.links.LCTaskILGEMTrainer.prepareLoader"]], "processaftertraining() (gcclassilgemtrainer method)": [[17, "begin.algorithms.gem.graphs.GCClassILGEMTrainer.processAfterTraining"]], "processaftertraining() (gcdomainilgemtrainer method)": [[17, "begin.algorithms.gem.graphs.GCDomainILGEMTrainer.processAfterTraining"]], "processaftertraining() (gctaskilgemtrainer method)": [[17, "begin.algorithms.gem.graphs.GCTaskILGEMTrainer.processAfterTraining"]], "processaftertraining() (lcclassilgemtrainer method)": [[17, "begin.algorithms.gem.links.LCClassILGEMTrainer.processAfterTraining"]], "processaftertraining() (lctaskilgemtrainer method)": [[17, "begin.algorithms.gem.links.LCTaskILGEMTrainer.processAfterTraining"]], "processaftertraining() (lctimeilgemtrainer method)": [[17, "begin.algorithms.gem.links.LCTimeILGEMTrainer.processAfterTraining"]], "processaftertraining() (lptimeilgemtrainer method)": [[17, "begin.algorithms.gem.links.LPTimeILGEMTrainer.processAfterTraining"]], "processaftertraining() (ncclassilgemminibatchtrainer method)": [[17, "begin.algorithms.gem.nodes.NCClassILGEMMinibatchTrainer.processAfterTraining"]], "processaftertraining() (ncclassilgemtrainer method)": [[17, "begin.algorithms.gem.nodes.NCClassILGEMTrainer.processAfterTraining"]], "processaftertraining() (ncdomainilgemtrainer method)": [[17, "begin.algorithms.gem.nodes.NCDomainILGEMTrainer.processAfterTraining"]], "processaftertraining() (nctaskilgemtrainer method)": [[17, "begin.algorithms.gem.nodes.NCTaskILGEMTrainer.processAfterTraining"]], "processbeforetraining() (gcclassilgemtrainer method)": [[17, "begin.algorithms.gem.graphs.GCClassILGEMTrainer.processBeforeTraining"]], "processbeforetraining() (gcdomainilgemtrainer method)": [[17, "begin.algorithms.gem.graphs.GCDomainILGEMTrainer.processBeforeTraining"]], "processbeforetraining() (gctaskilgemtrainer method)": [[17, "begin.algorithms.gem.graphs.GCTaskILGEMTrainer.processBeforeTraining"]], "processbeforetraining() (lctimeilgemtrainer method)": [[17, "begin.algorithms.gem.links.LCTimeILGEMTrainer.processBeforeTraining"]], "processbeforetraining() (lptimeilgemtrainer method)": [[17, "begin.algorithms.gem.links.LPTimeILGEMTrainer.processBeforeTraining"]], "processbeforetraining() (ncdomainilgemtrainer method)": [[17, "begin.algorithms.gem.nodes.NCDomainILGEMTrainer.processBeforeTraining"]], "processevaliteration() (gcdomainilgemtrainer method)": [[17, "begin.algorithms.gem.graphs.GCDomainILGEMTrainer.processEvalIteration"]], "processevaliteration() (lctimeilgemtrainer method)": [[17, "begin.algorithms.gem.links.LCTimeILGEMTrainer.processEvalIteration"]], "processevaliteration() (ncdomainilgemtrainer method)": [[17, "begin.algorithms.gem.nodes.NCDomainILGEMTrainer.processEvalIteration"]], "processtrainiteration() (gcdomainilgemtrainer method)": [[17, "begin.algorithms.gem.graphs.GCDomainILGEMTrainer.processTrainIteration"]], "processtrainiteration() (lptimeilgemtrainer method)": [[17, "begin.algorithms.gem.links.LPTimeILGEMTrainer.processTrainIteration"]], "processtrainiteration() (ncdomainilgemtrainer method)": [[17, "begin.algorithms.gem.nodes.NCDomainILGEMTrainer.processTrainIteration"]], "gcclassillwftrainer (class in begin.algorithms.lwf.graphs)": [[18, "begin.algorithms.lwf.graphs.GCClassILLwFTrainer"]], "gcdomainillwftrainer (class in begin.algorithms.lwf.graphs)": [[18, "begin.algorithms.lwf.graphs.GCDomainILLwFTrainer"]], "gctaskillwftrainer (class in begin.algorithms.lwf.graphs)": [[18, "begin.algorithms.lwf.graphs.GCTaskILLwFTrainer"]], "gctimeillwftrainer (class in begin.algorithms.lwf.graphs)": [[18, "begin.algorithms.lwf.graphs.GCTimeILLwFTrainer"]], "lcclassillwftrainer (class in begin.algorithms.lwf.links)": [[18, "begin.algorithms.lwf.links.LCClassILLwFTrainer"]], "lctaskillwftrainer (class in begin.algorithms.lwf.links)": [[18, "begin.algorithms.lwf.links.LCTaskILLwFTrainer"]], "lctimeillwftrainer (class in begin.algorithms.lwf.links)": [[18, "begin.algorithms.lwf.links.LCTimeILLwFTrainer"]], "lpdomainillwftrainer (class in begin.algorithms.lwf.links)": [[18, "begin.algorithms.lwf.links.LPDomainILLwFTrainer"]], "lptimeillwftrainer (class in begin.algorithms.lwf.links)": [[18, "begin.algorithms.lwf.links.LPTimeILLwFTrainer"]], "ncclassillwfminibatchtrainer (class in begin.algorithms.lwf.nodes)": [[18, "begin.algorithms.lwf.nodes.NCClassILLwFMinibatchTrainer"]], "ncclassillwftrainer (class in begin.algorithms.lwf.nodes)": [[18, "begin.algorithms.lwf.nodes.NCClassILLwFTrainer"]], "ncdomainillwftrainer (class in begin.algorithms.lwf.nodes)": [[18, "begin.algorithms.lwf.nodes.NCDomainILLwFTrainer"]], "nctaskillwftrainer (class in begin.algorithms.lwf.nodes)": [[18, "begin.algorithms.lwf.nodes.NCTaskILLwFTrainer"]], "nctimeillwftrainer (class in begin.algorithms.lwf.nodes)": [[18, "begin.algorithms.lwf.nodes.NCTimeILLwFTrainer"]], "afterinference() (gcclassillwftrainer method)": [[18, "begin.algorithms.lwf.graphs.GCClassILLwFTrainer.afterInference"]], "afterinference() (gctaskillwftrainer method)": [[18, "begin.algorithms.lwf.graphs.GCTaskILLwFTrainer.afterInference"]], "afterinference() (lcclassillwftrainer method)": [[18, "begin.algorithms.lwf.links.LCClassILLwFTrainer.afterInference"]], "afterinference() (lctaskillwftrainer method)": [[18, "begin.algorithms.lwf.links.LCTaskILLwFTrainer.afterInference"]], "afterinference() (lctimeillwftrainer method)": [[18, "begin.algorithms.lwf.links.LCTimeILLwFTrainer.afterInference"]], "afterinference() (ncclassillwfminibatchtrainer method)": [[18, "begin.algorithms.lwf.nodes.NCClassILLwFMinibatchTrainer.afterInference"]], "afterinference() (ncclassillwftrainer method)": [[18, "begin.algorithms.lwf.nodes.NCClassILLwFTrainer.afterInference"]], "afterinference() (nctaskillwftrainer method)": [[18, "begin.algorithms.lwf.nodes.NCTaskILLwFTrainer.afterInference"]], "begin.algorithms.lwf.graphs": [[18, "module-begin.algorithms.lwf.graphs"]], "begin.algorithms.lwf.links": [[18, "module-begin.algorithms.lwf.links"]], "begin.algorithms.lwf.nodes": [[18, "module-begin.algorithms.lwf.nodes"]], "inference() (gctaskillwftrainer method)": [[18, "begin.algorithms.lwf.graphs.GCTaskILLwFTrainer.inference"]], "inference() (lctaskillwftrainer method)": [[18, "begin.algorithms.lwf.links.LCTaskILLwFTrainer.inference"]], "inference() (nctaskillwftrainer method)": [[18, "begin.algorithms.lwf.nodes.NCTaskILLwFTrainer.inference"]], "prepareloader() (lctaskillwftrainer method)": [[18, "begin.algorithms.lwf.links.LCTaskILLwFTrainer.prepareLoader"]], "processaftertraining() (gcclassillwftrainer method)": [[18, "begin.algorithms.lwf.graphs.GCClassILLwFTrainer.processAfterTraining"]], "processaftertraining() (gcdomainillwftrainer method)": [[18, "begin.algorithms.lwf.graphs.GCDomainILLwFTrainer.processAfterTraining"]], "processaftertraining() (lcclassillwftrainer method)": [[18, "begin.algorithms.lwf.links.LCClassILLwFTrainer.processAfterTraining"]], "processaftertraining() (lctimeillwftrainer method)": [[18, "begin.algorithms.lwf.links.LCTimeILLwFTrainer.processAfterTraining"]], "processaftertraining() (lptimeillwftrainer method)": [[18, "begin.algorithms.lwf.links.LPTimeILLwFTrainer.processAfterTraining"]], "processaftertraining() (ncclassillwfminibatchtrainer method)": [[18, "begin.algorithms.lwf.nodes.NCClassILLwFMinibatchTrainer.processAfterTraining"]], "processaftertraining() (ncclassillwftrainer method)": [[18, "begin.algorithms.lwf.nodes.NCClassILLwFTrainer.processAfterTraining"]], "processaftertraining() (ncdomainillwftrainer method)": [[18, "begin.algorithms.lwf.nodes.NCDomainILLwFTrainer.processAfterTraining"]], "processbeforetraining() (gcdomainillwftrainer method)": [[18, "begin.algorithms.lwf.graphs.GCDomainILLwFTrainer.processBeforeTraining"]], "processbeforetraining() (gctaskillwftrainer method)": [[18, "begin.algorithms.lwf.graphs.GCTaskILLwFTrainer.processBeforeTraining"]], "processbeforetraining() (lctaskillwftrainer method)": [[18, "begin.algorithms.lwf.links.LCTaskILLwFTrainer.processBeforeTraining"]], "processbeforetraining() (lctimeillwftrainer method)": [[18, "begin.algorithms.lwf.links.LCTimeILLwFTrainer.processBeforeTraining"]], "processbeforetraining() (ncdomainillwftrainer method)": [[18, "begin.algorithms.lwf.nodes.NCDomainILLwFTrainer.processBeforeTraining"]], "processbeforetraining() (nctaskillwftrainer method)": [[18, "begin.algorithms.lwf.nodes.NCTaskILLwFTrainer.processBeforeTraining"]], "processevaliteration() (gcdomainillwftrainer method)": [[18, "begin.algorithms.lwf.graphs.GCDomainILLwFTrainer.processEvalIteration"]], "processevaliteration() (lctimeillwftrainer method)": [[18, "begin.algorithms.lwf.links.LCTimeILLwFTrainer.processEvalIteration"]], "processevaliteration() (ncdomainillwftrainer method)": [[18, "begin.algorithms.lwf.nodes.NCDomainILLwFTrainer.processEvalIteration"]], "processtrainiteration() (gcdomainillwftrainer method)": [[18, "begin.algorithms.lwf.graphs.GCDomainILLwFTrainer.processTrainIteration"]], "processtrainiteration() (lptimeillwftrainer method)": [[18, "begin.algorithms.lwf.links.LPTimeILLwFTrainer.processTrainIteration"]], "processtrainiteration() (ncdomainillwftrainer method)": [[18, "begin.algorithms.lwf.nodes.NCDomainILLwFTrainer.processTrainIteration"]], "gcclassilmastrainer (class in begin.algorithms.mas.graphs)": [[19, "begin.algorithms.mas.graphs.GCClassILMASTrainer"]], "gcdomainilmastrainer (class in begin.algorithms.mas.graphs)": [[19, "begin.algorithms.mas.graphs.GCDomainILMASTrainer"]], "gctaskilmastrainer (class in begin.algorithms.mas.graphs)": [[19, "begin.algorithms.mas.graphs.GCTaskILMASTrainer"]], "gctimeilmastrainer (class in begin.algorithms.mas.graphs)": [[19, "begin.algorithms.mas.graphs.GCTimeILMASTrainer"]], "lcclassilmastrainer (class in begin.algorithms.mas.links)": [[19, "begin.algorithms.mas.links.LCClassILMASTrainer"]], "lctaskilmastrainer (class in begin.algorithms.mas.links)": [[19, "begin.algorithms.mas.links.LCTaskILMASTrainer"]], "lctimeilmastrainer (class in begin.algorithms.mas.links)": [[19, "begin.algorithms.mas.links.LCTimeILMASTrainer"]], "lpdomainilmastrainer (class in begin.algorithms.mas.links)": [[19, "begin.algorithms.mas.links.LPDomainILMASTrainer"]], "lptimeilmastrainer (class in begin.algorithms.mas.links)": [[19, "begin.algorithms.mas.links.LPTimeILMASTrainer"]], "ncclassilmasminibatchtrainer (class in begin.algorithms.mas.nodes)": [[19, "begin.algorithms.mas.nodes.NCClassILMASMinibatchTrainer"]], "ncclassilmastrainer (class in begin.algorithms.mas.nodes)": [[19, "begin.algorithms.mas.nodes.NCClassILMASTrainer"]], "ncdomainilmastrainer (class in begin.algorithms.mas.nodes)": [[19, "begin.algorithms.mas.nodes.NCDomainILMASTrainer"]], "nctaskilmastrainer (class in begin.algorithms.mas.nodes)": [[19, "begin.algorithms.mas.nodes.NCTaskILMASTrainer"]], "nctimeilmastrainer (class in begin.algorithms.mas.nodes)": [[19, "begin.algorithms.mas.nodes.NCTimeILMASTrainer"]], "afterinference() (gcclassilmastrainer method)": [[19, "begin.algorithms.mas.graphs.GCClassILMASTrainer.afterInference"]], "afterinference() (gctaskilmastrainer method)": [[19, "begin.algorithms.mas.graphs.GCTaskILMASTrainer.afterInference"]], "afterinference() (lcclassilmastrainer method)": [[19, "begin.algorithms.mas.links.LCClassILMASTrainer.afterInference"]], "afterinference() (lctaskilmastrainer method)": [[19, "begin.algorithms.mas.links.LCTaskILMASTrainer.afterInference"]], "afterinference() (lctimeilmastrainer method)": [[19, "begin.algorithms.mas.links.LCTimeILMASTrainer.afterInference"]], "afterinference() (ncclassilmasminibatchtrainer method)": [[19, "begin.algorithms.mas.nodes.NCClassILMASMinibatchTrainer.afterInference"]], "afterinference() (ncclassilmastrainer method)": [[19, "begin.algorithms.mas.nodes.NCClassILMASTrainer.afterInference"]], "afterinference() (nctaskilmastrainer method)": [[19, "begin.algorithms.mas.nodes.NCTaskILMASTrainer.afterInference"]], "begin.algorithms.mas.graphs": [[19, "module-begin.algorithms.mas.graphs"]], "begin.algorithms.mas.links": [[19, "module-begin.algorithms.mas.links"]], "begin.algorithms.mas.nodes": [[19, "module-begin.algorithms.mas.nodes"]], "inference() (gctaskilmastrainer method)": [[19, "begin.algorithms.mas.graphs.GCTaskILMASTrainer.inference"]], "inference() (lctaskilmastrainer method)": [[19, "begin.algorithms.mas.links.LCTaskILMASTrainer.inference"]], "inference() (nctaskilmastrainer method)": [[19, "begin.algorithms.mas.nodes.NCTaskILMASTrainer.inference"]], "inittrainingstates() (gcclassilmastrainer method)": [[19, "begin.algorithms.mas.graphs.GCClassILMASTrainer.initTrainingStates"]], "inittrainingstates() (gcdomainilmastrainer method)": [[19, "begin.algorithms.mas.graphs.GCDomainILMASTrainer.initTrainingStates"]], "inittrainingstates() (gctaskilmastrainer method)": [[19, "begin.algorithms.mas.graphs.GCTaskILMASTrainer.initTrainingStates"]], "inittrainingstates() (lcclassilmastrainer method)": [[19, "begin.algorithms.mas.links.LCClassILMASTrainer.initTrainingStates"]], "inittrainingstates() (lctaskilmastrainer method)": [[19, "begin.algorithms.mas.links.LCTaskILMASTrainer.initTrainingStates"]], "inittrainingstates() (lctimeilmastrainer method)": [[19, "begin.algorithms.mas.links.LCTimeILMASTrainer.initTrainingStates"]], "inittrainingstates() (lptimeilmastrainer method)": [[19, "begin.algorithms.mas.links.LPTimeILMASTrainer.initTrainingStates"]], "inittrainingstates() (ncclassilmasminibatchtrainer method)": [[19, "begin.algorithms.mas.nodes.NCClassILMASMinibatchTrainer.initTrainingStates"]], "inittrainingstates() (ncclassilmastrainer method)": [[19, "begin.algorithms.mas.nodes.NCClassILMASTrainer.initTrainingStates"]], "inittrainingstates() (ncdomainilmastrainer method)": [[19, "begin.algorithms.mas.nodes.NCDomainILMASTrainer.initTrainingStates"]], "inittrainingstates() (nctaskilmastrainer method)": [[19, "begin.algorithms.mas.nodes.NCTaskILMASTrainer.initTrainingStates"]], "prepareloader() (lctaskilmastrainer method)": [[19, "begin.algorithms.mas.links.LCTaskILMASTrainer.prepareLoader"]], "processaftertraining() (gcclassilmastrainer method)": [[19, "begin.algorithms.mas.graphs.GCClassILMASTrainer.processAfterTraining"]], "processaftertraining() (gcdomainilmastrainer method)": [[19, "begin.algorithms.mas.graphs.GCDomainILMASTrainer.processAfterTraining"]], "processaftertraining() (gctaskilmastrainer method)": [[19, "begin.algorithms.mas.graphs.GCTaskILMASTrainer.processAfterTraining"]], "processaftertraining() (lcclassilmastrainer method)": [[19, "begin.algorithms.mas.links.LCClassILMASTrainer.processAfterTraining"]], "processaftertraining() (lctaskilmastrainer method)": [[19, "begin.algorithms.mas.links.LCTaskILMASTrainer.processAfterTraining"]], "processaftertraining() (lctimeilmastrainer method)": [[19, "begin.algorithms.mas.links.LCTimeILMASTrainer.processAfterTraining"]], "processaftertraining() (lptimeilmastrainer method)": [[19, "begin.algorithms.mas.links.LPTimeILMASTrainer.processAfterTraining"]], "processaftertraining() (ncclassilmasminibatchtrainer method)": [[19, "begin.algorithms.mas.nodes.NCClassILMASMinibatchTrainer.processAfterTraining"]], "processaftertraining() (ncclassilmastrainer method)": [[19, "begin.algorithms.mas.nodes.NCClassILMASTrainer.processAfterTraining"]], "processaftertraining() (ncdomainilmastrainer method)": [[19, "begin.algorithms.mas.nodes.NCDomainILMASTrainer.processAfterTraining"]], "processaftertraining() (nctaskilmastrainer method)": [[19, "begin.algorithms.mas.nodes.NCTaskILMASTrainer.processAfterTraining"]], "processbeforetraining() (gcdomainilmastrainer method)": [[19, "begin.algorithms.mas.graphs.GCDomainILMASTrainer.processBeforeTraining"]], "processbeforetraining() (lctimeilmastrainer method)": [[19, "begin.algorithms.mas.links.LCTimeILMASTrainer.processBeforeTraining"]], "processbeforetraining() (ncdomainilmastrainer method)": [[19, "begin.algorithms.mas.nodes.NCDomainILMASTrainer.processBeforeTraining"]], "processevaliteration() (gcdomainilmastrainer method)": [[19, "begin.algorithms.mas.graphs.GCDomainILMASTrainer.processEvalIteration"]], "processevaliteration() (lctimeilmastrainer method)": [[19, "begin.algorithms.mas.links.LCTimeILMASTrainer.processEvalIteration"]], "processevaliteration() (ncdomainilmastrainer method)": [[19, "begin.algorithms.mas.nodes.NCDomainILMASTrainer.processEvalIteration"]], "processtrainiteration() (gcdomainilmastrainer method)": [[19, "begin.algorithms.mas.graphs.GCDomainILMASTrainer.processTrainIteration"]], "processtrainiteration() (lptimeilmastrainer method)": [[19, "begin.algorithms.mas.links.LPTimeILMASTrainer.processTrainIteration"]], "processtrainiteration() (ncdomainilmastrainer method)": [[19, "begin.algorithms.mas.nodes.NCDomainILMASTrainer.processTrainIteration"]], "gcclassiltwptrainer (class in begin.algorithms.twp.graphs)": [[20, "begin.algorithms.twp.graphs.GCClassILTWPTrainer"]], "gcdomainiltwptrainer (class in begin.algorithms.twp.graphs)": [[20, "begin.algorithms.twp.graphs.GCDomainILTWPTrainer"]], "gctaskiltwptrainer (class in begin.algorithms.twp.graphs)": [[20, "begin.algorithms.twp.graphs.GCTaskILTWPTrainer"]], "gctimeiltwptrainer (class in begin.algorithms.twp.graphs)": [[20, "begin.algorithms.twp.graphs.GCTimeILTWPTrainer"]], "lcclassiltwptrainer (class in begin.algorithms.twp.links)": [[20, "begin.algorithms.twp.links.LCClassILTWPTrainer"]], "lctaskiltwptrainer (class in begin.algorithms.twp.links)": [[20, "begin.algorithms.twp.links.LCTaskILTWPTrainer"]], "lctimeiltwptrainer (class in begin.algorithms.twp.links)": [[20, "begin.algorithms.twp.links.LCTimeILTWPTrainer"]], "lpdomainiltwptrainer (class in begin.algorithms.twp.links)": [[20, "begin.algorithms.twp.links.LPDomainILTWPTrainer"]], "lptimeiltwptrainer (class in begin.algorithms.twp.links)": [[20, "begin.algorithms.twp.links.LPTimeILTWPTrainer"]], "ncclassiltwpminibatchtrainer (class in begin.algorithms.twp.nodes)": [[20, "begin.algorithms.twp.nodes.NCClassILTWPMinibatchTrainer"]], "ncclassiltwptrainer (class in begin.algorithms.twp.nodes)": [[20, "begin.algorithms.twp.nodes.NCClassILTWPTrainer"]], "ncdomainiltwptrainer (class in begin.algorithms.twp.nodes)": [[20, "begin.algorithms.twp.nodes.NCDomainILTWPTrainer"]], "nctaskiltwptrainer (class in begin.algorithms.twp.nodes)": [[20, "begin.algorithms.twp.nodes.NCTaskILTWPTrainer"]], "nctimeiltwptrainer (class in begin.algorithms.twp.nodes)": [[20, "begin.algorithms.twp.nodes.NCTimeILTWPTrainer"]], "afterinference() (gcclassiltwptrainer method)": [[20, "begin.algorithms.twp.graphs.GCClassILTWPTrainer.afterInference"]], "afterinference() (gctaskiltwptrainer method)": [[20, "begin.algorithms.twp.graphs.GCTaskILTWPTrainer.afterInference"]], "afterinference() (lcclassiltwptrainer method)": [[20, "begin.algorithms.twp.links.LCClassILTWPTrainer.afterInference"]], "afterinference() (lctaskiltwptrainer method)": [[20, "begin.algorithms.twp.links.LCTaskILTWPTrainer.afterInference"]], "afterinference() (lctimeiltwptrainer method)": [[20, "begin.algorithms.twp.links.LCTimeILTWPTrainer.afterInference"]], "afterinference() (ncclassiltwpminibatchtrainer method)": [[20, "begin.algorithms.twp.nodes.NCClassILTWPMinibatchTrainer.afterInference"]], "afterinference() (ncclassiltwptrainer method)": [[20, "begin.algorithms.twp.nodes.NCClassILTWPTrainer.afterInference"]], "afterinference() (nctaskiltwptrainer method)": [[20, "begin.algorithms.twp.nodes.NCTaskILTWPTrainer.afterInference"]], "begin.algorithms.twp.graphs": [[20, "module-begin.algorithms.twp.graphs"]], "begin.algorithms.twp.links": [[20, "module-begin.algorithms.twp.links"]], "begin.algorithms.twp.nodes": [[20, "module-begin.algorithms.twp.nodes"]], "inference() (gcclassiltwptrainer method)": [[20, "begin.algorithms.twp.graphs.GCClassILTWPTrainer.inference"]], "inference() (gctaskiltwptrainer method)": [[20, "begin.algorithms.twp.graphs.GCTaskILTWPTrainer.inference"]], "inference() (lcclassiltwptrainer method)": [[20, "begin.algorithms.twp.links.LCClassILTWPTrainer.inference"]], "inference() (lctaskiltwptrainer method)": [[20, "begin.algorithms.twp.links.LCTaskILTWPTrainer.inference"]], "inference() (lctimeiltwptrainer method)": [[20, "begin.algorithms.twp.links.LCTimeILTWPTrainer.inference"]], "inference() (ncclassiltwpminibatchtrainer method)": [[20, "begin.algorithms.twp.nodes.NCClassILTWPMinibatchTrainer.inference"]], "inference() (ncclassiltwptrainer method)": [[20, "begin.algorithms.twp.nodes.NCClassILTWPTrainer.inference"]], "inference() (nctaskiltwptrainer method)": [[20, "begin.algorithms.twp.nodes.NCTaskILTWPTrainer.inference"]], "inittrainingstates() (gcclassiltwptrainer method)": [[20, "begin.algorithms.twp.graphs.GCClassILTWPTrainer.initTrainingStates"]], "inittrainingstates() (gcdomainiltwptrainer method)": [[20, "begin.algorithms.twp.graphs.GCDomainILTWPTrainer.initTrainingStates"]], "inittrainingstates() (gctaskiltwptrainer method)": [[20, "begin.algorithms.twp.graphs.GCTaskILTWPTrainer.initTrainingStates"]], "inittrainingstates() (lcclassiltwptrainer method)": [[20, "begin.algorithms.twp.links.LCClassILTWPTrainer.initTrainingStates"]], "inittrainingstates() (lctaskiltwptrainer method)": [[20, "begin.algorithms.twp.links.LCTaskILTWPTrainer.initTrainingStates"]], "inittrainingstates() (lctimeiltwptrainer method)": [[20, "begin.algorithms.twp.links.LCTimeILTWPTrainer.initTrainingStates"]], "inittrainingstates() (lptimeiltwptrainer method)": [[20, "begin.algorithms.twp.links.LPTimeILTWPTrainer.initTrainingStates"]], "inittrainingstates() (ncclassiltwpminibatchtrainer method)": [[20, "begin.algorithms.twp.nodes.NCClassILTWPMinibatchTrainer.initTrainingStates"]], "inittrainingstates() (ncclassiltwptrainer method)": [[20, "begin.algorithms.twp.nodes.NCClassILTWPTrainer.initTrainingStates"]], "inittrainingstates() (nctaskiltwptrainer method)": [[20, "begin.algorithms.twp.nodes.NCTaskILTWPTrainer.initTrainingStates"]], "prepareloader() (lctaskiltwptrainer method)": [[20, "begin.algorithms.twp.links.LCTaskILTWPTrainer.prepareLoader"]], "processaftertraining() (gcclassiltwptrainer method)": [[20, "begin.algorithms.twp.graphs.GCClassILTWPTrainer.processAfterTraining"]], "processaftertraining() (gcdomainiltwptrainer method)": [[20, "begin.algorithms.twp.graphs.GCDomainILTWPTrainer.processAfterTraining"]], "processaftertraining() (gctaskiltwptrainer method)": [[20, "begin.algorithms.twp.graphs.GCTaskILTWPTrainer.processAfterTraining"]], "processaftertraining() (lcclassiltwptrainer method)": [[20, "begin.algorithms.twp.links.LCClassILTWPTrainer.processAfterTraining"]], "processaftertraining() (lctaskiltwptrainer method)": [[20, "begin.algorithms.twp.links.LCTaskILTWPTrainer.processAfterTraining"]], "processaftertraining() (lctimeiltwptrainer method)": [[20, "begin.algorithms.twp.links.LCTimeILTWPTrainer.processAfterTraining"]], "processaftertraining() (lptimeiltwptrainer method)": [[20, "begin.algorithms.twp.links.LPTimeILTWPTrainer.processAfterTraining"]], "processaftertraining() (ncclassiltwpminibatchtrainer method)": [[20, "begin.algorithms.twp.nodes.NCClassILTWPMinibatchTrainer.processAfterTraining"]], "processaftertraining() (ncclassiltwptrainer method)": [[20, "begin.algorithms.twp.nodes.NCClassILTWPTrainer.processAfterTraining"]], "processaftertraining() (nctaskiltwptrainer method)": [[20, "begin.algorithms.twp.nodes.NCTaskILTWPTrainer.processAfterTraining"]], "processbeforetraining() (gcdomainiltwptrainer method)": [[20, "begin.algorithms.twp.graphs.GCDomainILTWPTrainer.processBeforeTraining"]], "processbeforetraining() (lctimeiltwptrainer method)": [[20, "begin.algorithms.twp.links.LCTimeILTWPTrainer.processBeforeTraining"]], "processevaliteration() (gcdomainiltwptrainer method)": [[20, "begin.algorithms.twp.graphs.GCDomainILTWPTrainer.processEvalIteration"]], "processevaliteration() (lctimeiltwptrainer method)": [[20, "begin.algorithms.twp.links.LCTimeILTWPTrainer.processEvalIteration"]], "processtrainiteration() (gcdomainiltwptrainer method)": [[20, "begin.algorithms.twp.graphs.GCDomainILTWPTrainer.processTrainIteration"]], "processtrainiteration() (lptimeiltwptrainer method)": [[20, "begin.algorithms.twp.links.LPTimeILTWPTrainer.processTrainIteration"]], "accuracyevaluator (class in begin.evaluators)": [[22, "begin.evaluators.AccuracyEvaluator"]], "baseevaluator (class in begin.evaluators)": [[22, "begin.evaluators.BaseEvaluator"]], "hitsevaluator (class in begin.evaluators)": [[22, "begin.evaluators.HitsEvaluator"]], "rocaucevaluator (class in begin.evaluators)": [[22, "begin.evaluators.ROCAUCEvaluator"]], "simple_eval() (accuracyevaluator method)": [[22, "begin.evaluators.AccuracyEvaluator.simple_eval"]], "simple_eval() (baseevaluator method)": [[22, "begin.evaluators.BaseEvaluator.simple_eval"]], "simple_eval() (hitsevaluator method)": [[22, "begin.evaluators.HitsEvaluator.simple_eval"]], "simple_eval() (rocaucevaluator method)": [[22, "begin.evaluators.ROCAUCEvaluator.simple_eval"]], "adaptivelinear (class in begin.utils)": [[23, "begin.utils.AdaptiveLinear"]], "forward() (adaptivelinear method)": [[23, "begin.utils.AdaptiveLinear.forward"]], "get_output_mask() (adaptivelinear method)": [[23, "begin.utils.AdaptiveLinear.get_output_mask"]], "observe_outputs() (adaptivelinear method)": [[23, "begin.utils.AdaptiveLinear.observe_outputs"]]}})